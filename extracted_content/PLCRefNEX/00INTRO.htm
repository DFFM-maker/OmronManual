
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">


 <meta name="generator" content="Adobe RoboHelp 11">
<title>00INTRO</title>
<link rel="stylesheet" href="00INTRO.css" type="text/css">
<style title="hcp" type="text/css">
<!--
table.hcp1 { padding-top:5.00pt;
padding-right:4.00pt;
padding-bottom:1.00pt; }
table.hcp2 { padding-left:4.00pt;
padding-top:4.00pt;
padding-right:4.00pt;
padding-bottom:2.00pt; }
td.hcp3 { border-top:solid 1px #000000;
border-right:solid 1px #000000;
border-bottom:solid 1px #000000; }
td.hcp4 { border-top:solid 1px #000000;
border-bottom:solid 1px #000000; }
td.hcp5 { border-right:solid 1px #000000;
border-bottom:solid 1px #000000; }
td.hcp6 { border-bottom:solid 1px #000000; }
span.hcp7 { font-weight:bold; }
span.hcp8 { font-family:Times New Roman;
font-size:7.0pt; }
span.hcp9 { font-style:italic; }
table.hcp10 { padding-top:5.00pt;
padding-right:4.00pt;
padding-bottom:1.00pt;
margin-left:31.18pt; }
td.hcp11 { border-left:solid 1px #000000;
border-bottom:solid 1px #000000; }
img.hcp12 { border:none; }
span.hcp13 { font-family:Symbol; }
-->
</style>
</head>

<body>
<script type="text/javascript" src="../ehlpdhtm.js"></script>

<p class="Title" style="margin-bottom: 14.000pt;">Using this Section</p>
<p class="FM_body1">The notation used to describe instructions in this 
 section is explained below.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="661" class="hcp1">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3"><p class="FM_CRhead3">Items</p></td>
	</tr>
</table>

<p class="FM_body1">The following items are provided.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="663" class="hcp2">
	<tr style="height: 20px;" bgcolor="#B3B3B3">
		<td width="162" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Item</p></td>
		<td width="500" bgcolor="#B3B3B3" class="hcp4"><p class="FM_tabletitlec9pt">Description</p></td>
	</tr>
	<tr style="height: 37px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Instruction</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 instruction word is given.<br>
		Example: MoveBit</p></td>
	</tr>
	<tr style="height: 37px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Name</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 name of the instruction is given.<br>
		Example: Move Bit</p></td>
	</tr>
	<tr style="height: 67px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">FB/FUN</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">Whether 
		 the instruction is a function block (FB) instruction or a function 
		 (FUN) instruction is given.<br>
		You can call FB instructions only from programs and function blocks.<br>
		You can call FUN instructions from programs, function blocks, and 
		 functions.</p></td>
	</tr>
	<tr style="height: 438px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Graphic expression</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 figure that represents the instruction in a ladder diagram is 
		 given.</p>
		<p class="FM_tablebody19pt"><span class="hcp7">Example 
		 for a FUN Instruction</span> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="hcp7">&#160;&#160;&#160;Example for a FB 
		 Instruction</span></p>
		<p class="FM_figl"><img id="0" src="INTRO-01.gif" alt="" name="0" width="519" height="137" border="0">&#160;</p>
		<p class="FM_figl">&#160;</p>
		<p class="FM_tablebody19pt">The instruction option, upward differentiation 
		 specification, and instance specification are described below.</p>
		<p class="FM_tablebody19pt">Instruction option:<br>
		Support for the instruction option is indicated by “(@)” before 
		 the FUN instruction. If support for the instruction option is 
		 indicated, you can place “@” before the instruction word to specify 
		 upward differentiation. &#160;An instruction for which upward 
		 differentiation is specified is executed when the value of the 
		 EN input variable was FALSE in the previous task period and is 
		 TRUE in the current task period.</p>
		<p class="FM_tablebody19pt">Upward differentiation specification:<br>
		This is indicated by the arrow pointing into the instruction at 
		 the entry point of the input variable. Instructions with this 
		 specification operate as upwardly differentiated instructions.</p>
		<p class="FM_tablebody19pt">Instance specification:<br>
		An instance of an instruction is indicated by “XX_instance” above 
		 an FB instruction. You must assign an instance name to any instance 
		 of an instruction that you specify.</p></td>
	</tr>
	<tr style="height: 210px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">ST expression</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 notation that represents the instruction in ST is given.</p>
		<p class="FM_tablebody19pt">There are two ways that you can use 
		 to code an instruction in ST. These are described below.</p>
		<p class="FM_tablenum9pt">1.<span class="hcp8">&#160;&#160;&#160;</span>Directly 
		 Specifying the Correspondence between the Parameters and the Input, 
		 Output, and In-Out Variables<br>
		Example: MoveBit(In:=abc, InPos:=def, InOut:=ghi, InOutPos:=jkl);</p>
		<p class="FM_tablenumnext9pt">2.<span class="hcp8">&#160;&#160;&#160;</span>Specifying 
		 Only the Parameters and Omitting the Input, Output, and In-Out 
		 Variables<br>
		Example: MoveBit(In, InPos, InOut, InOutPos);</p>
		<p class="FM_tablebody19pt">Method 2 is used in this section.</p>
		<p class="FM_tablebody19pt">You must assign an instance name to 
		 any instruction that is given as “XX_instance(<span class="hcp9">variable_name</span>).”</p>
		<p class="FM_tablebody29pt">Example: TON_instance (In, PT, Q, ET);</p></td>
	</tr>
	<tr style="height: 551px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Variables</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebul9pt"><span 
		 class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Name<br>
		The input variables, output variables, and in-out variables are 
		 given.<br>
		Example: <span class="hcp9">In1</span><br>
		However, variables that are used by many instructions are not given 
		 on the pages that describe individual instructions. The following 
		 eight variables are commonly used. The specifications of these 
		 variables are given later.<br>
		(<span class="hcp9">EN</span>, <span class="hcp9">ENO</span>, 
		 <span class="hcp9">Execute</span>, <span class="hcp9">Done</span>, 
		 <span class="hcp9">Busy</span>, <span class="hcp9">Error</span>, 
		 <span class="hcp9">ErrorID</span>, and <span class="hcp9">ErrorIDEx</span>)</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Meaning<br>
		The name of the variable is given.<br>
		Example: Up-counter</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>I/O<br>
		Whether the variable is an input variable, output variable, or 
		 in-out variable is given.</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Description<br>
		The meaning of the variable and any restrictions are given.</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Valid range<br>
		The range that the variable can take is given. “Depends on data 
		 type” indicates that the valid range of the variable depends on 
		 the data type that you use. The valid ranges of the data types 
		 are given later in this section.</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Unit<br>
		The unit of the value that is specified with the variable is given. 
		 “---” indicates that there is no unit.<br>
		Example: Bytes</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Default<br>
		The specified default value is automatically used for the variable 
		 if you do not assign a parameter to the instruction before it 
		 is executed.<br>
		“---” indicates the following:</p>
		<p class="FM_tablebody29pt">Input variables:<span class="hcp8">&#160;&#160;&#160;</span><span class="hcp8">&#160;&#160;&#160;</span>The 
		 default value of the data type of the input variable is assigned. 
		 The default values of the data types are given later in this section. 
		 If the input variable is a structure, the default value is given 
		 in the specifications of the structure in the description of the 
		 function of the instruction.</p>
		<p class="FM_tablebody29pt">Output variables:<span class="hcp8">&#160;&#160;&#160;</span><span class="hcp8">&#160;&#160;&#160;</span>Default 
		 values are not set.</p>
		<p class="FM_tablebody29pt">In-out variables:<span class="hcp8">&#160;&#160;&#160;</span><span class="hcp8">&#160;&#160;&#160;</span>Default 
		 values are not set.</p>
		<p class="FM_tablebul9pt"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
										 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
		 class="FM_Helvetica">&#160;</span>Data type<br>
		The data type of the variable is given. The use of enumerations, 
		 arrays, structures, and unions is also given.</p></td>
	</tr>
	<tr style="height: 67px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Function</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 function of the instruction is described. Variable names are given 
		 in italic text.<br>
		Example: <span class="hcp9">In1</span><br>
		Array names are followed by “[]”.<br>
		Example: <span class="hcp9">InOut[]</span></p></td>
	</tr>
	<tr style="height: 52px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Related System-defined 
		 Variables</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 system-defined variables that are related to the instruction are 
		 given. Refer to the <span class="hcp9">NJ/NX-series 
		 CPU Unit Software User's Manual</span> (Cat. No. W501) or <span 
		 class="FM_italic">NY-series Industrial Panel PC / Indus­trial 
		 Box PC Software User’s Manual</span> (Cat. No. W558) for details 
		 on system-defined variables.</p></td>
	</tr>
	<tr style="height: 37px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Related semi-user-defined 
		 variables</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">The 
		 semi-user-defined variables and variable names that are related 
		 to the instruction are given. Refer to the specified manuals for 
		 details on semi-user-defined variables.</p></td>
	</tr>
	<tr style="height: 37px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Additional Information</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">Additional 
		 information on the function of the instruction is provided. This 
		 includes related instruc­tions and helpful information for application 
		 of the instruction.</p></td>
	</tr>
	<tr style="height: 37px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Precautions for Correct 
		 Use</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">Precautions 
		 for application of the instruction are given. The conditions under 
		 which errors occur for the instruction are also given here.</p></td>
	</tr>
	<tr style="height: 37px;">
		<td width="162" class="hcp5"><p class="FM_tablebody19pt">Sample Programming</p></td>
		<td width="500" class="hcp6"><p class="FM_tablebody19pt">Short 
		 samples of how to use the instruction in an application program 
		 are provided. The ladder dia­gram and ST for the same process 
		 are shown.</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="661" class="hcp1">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3"><p class="FM_CRhead3">Common 
		 Variables</p></td>
	</tr>
</table>

<p class="FM_body1">The specifications of variables that are used for many 
 instructions (<span class="hcp9">EN, ENO, Execute, Done, 
 Busy, Error, ErrorID,</span> and <span class="hcp9">ErrorIDEx</span>) 
 are described below. These variables are not described in the tables of 
 variables for individual instructions. Check the graphic or ST expression 
 for the instruction to see if an instruction uses these variables.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4">EN</p></td>
	</tr>
</table>

<p class="FM_body1"><span class="hcp9">EN</span> is an input 
 variable that gives the execution condition for a FUN instruction.<br>
When you use a FUN instruction in a ladder diagram, connect the execution 
 condition to <span class="hcp9">EN</span>.</p>

<table cellspacing="0" width="663" class="hcp2">
	<tr style="height: 15.00pt;" bgcolor="#B3B3B3">
		<td width="43" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Name</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Meaning</p></td>
		<td width="68" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">I/O</p></td>
		<td width="196" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Description</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Data type</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Valid range</p></td>
		<td width="71" bgcolor="#B3B3B3" class="hcp4"><p class="FM_tabletitlec9pt">Default</p></td>
	</tr>
	<tr style="height: 30.65pt;">
		<td width="43" class="hcp5"><p class="FM_tablebody19pt">EN</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">Enable (Execu­tion 
		 Condition)</p></td>
		<td width="68" class="hcp5"><p class="FM_tablebody19pt">Input</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">TRUE: Instruction 
		 is executed.<sup>*</sup></p>
		<p class="FM_tablebody19pt">FALSE: Instruction is not executed.</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">BOOL</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="71" class="hcp6"><p class="FM_tablebody19pt">TRUE</p></td>
	</tr>
</table>

<p class="FM_asterisk1">*<span class="hcp8">&#160;&#160;&#160;</span>If 
 upward differentiation (@) is specified as an instruction option, the 
 execution condition is when the value of <span class="hcp9">EN</span> 
 changes from FALSE to TRUE. If downward differentiation (%) is specified 
 as an instruction option, the execution condition is when the value of 
 <span class="hcp9">EN</span> changes from TRUE to FALSE.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>FB instructions do not have an <span class="hcp9">EN</span> input variable.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>When you call a FUN instruction 
 from structured text, omit the <span class="hcp9">EN</span> 
 input variable. The <span class="hcp9">EN</span> input 
 vari­able is not required in structured text because the execution condition 
 for the instruction is deter­mined by the operation sequence.</p>
<p class="FM_bul1">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4">ENO</p></td>
	</tr>
</table>

<p class="FM_body1">The <span class="hcp9">ENO</span> output 
 variable passes the execution to the next instruction in a ladder diagram. 
 Normally, when instruction execution is completed, the value of <span class="hcp9">ENO</span> changes to TRUE. Execution 
 of the next instruction is then started.</p>

<table cellspacing="0" width="663" class="hcp2">
	<tr style="height: 15.00pt;" bgcolor="#B3B3B3">
		<td width="43" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Name</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Meaning</p></td>
		<td width="68" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">I/O</p></td>
		<td width="196" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Description</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Data type</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Valid range</p></td>
		<td width="71" bgcolor="#B3B3B3" class="hcp4"><p class="FM_tabletitlec9pt">Default</p></td>
	</tr>
	<tr style="height: 51.00pt;">
		<td width="43" class="hcp5"><p class="FM_tablebody19pt">ENO</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">Enable Output</p></td>
		<td width="68" class="hcp5"><p class="FM_tablebody19pt">Output</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">TRUE:<span class="hcp8">&#160;&#160;&#160;</span>Normal end.*</p>
		<p class="FM_tablebody19pt">FALSE:<span class="hcp8">&#160;&#160;&#160;</span>Error 
		 end, execution in progress, or execution condition not met.</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">BOOL</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="71" class="hcp6"><p class="FM_tablebody19pt">---</p></td>
	</tr>
</table>

<p class="FM_asterisk1">*<span class="hcp8">&#160;&#160;&#160;</span><span class="hcp9">ENO</span> is TRUE only while the execution 
 condition is met. The value of <span class="hcp9">ENO</span> 
 changes to FALSE when the execution condition is no longer met after a 
 normal end.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Most FUN instructions and FB instructions 
 have <span class="hcp9">ENO</span> output variables. There 
 are, however, some instructions that do not have an <span class="hcp9">ENO</span> 
 output variable.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Omit the <span class="hcp9">ENO</span> 
 output variable in structured text. The <span class="hcp9">ENO</span> 
 output variable is not required in structured text because the execution 
 condition for the next instruction is determined by the operation sequence.</p>
<p class="FM_bul1">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4"><span class="hcp9">Execute</span>, 
		 <span class="hcp9">Done</span>, and <span class="hcp9">Busy</span></p></td>
	</tr>
</table>

<p class="FM_body1"><span class="hcp9">Execute</span> is 
 an input variable that gives the execution condition for some FB instructions.<br>
Instruction execution starts when <span class="hcp9">Execute</span> 
 changes to TRUE. After <span class="hcp9">Execute</span> 
 changes to TRUE, execu­tion of this instruction is continued until processing 
 is completed even if the value of <span class="hcp9">Execute</span> 
 changes to FALSE or the instruction execution time exceeds the task period.</p>
<p class="FM_body1"><span class="hcp9">Done</span> is an 
 output variable that shows the completion of execution for some FB instructions.<span class="hcp9"><br>
Busy</span> is an output variable that shows that instruction execution 
 is in progress for some FB instructions.</p>

<table cellspacing="0" width="664" class="hcp2">
	<tr style="height: 26.00pt;" bgcolor="#B3B3B3">
		<td width="67" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Name</p></td>
		<td width="83" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Meaning</p></td>
		<td width="68" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">I/O</p></td>
		<td width="196" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Description</p></td>
		<td width="82" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Data type</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Valid range</p></td>
		<td width="71" bgcolor="#B3B3B3" class="hcp4"><p class="FM_tabletitlec9pt">Initial 
		 value</p></td>
	</tr>
	<tr style="height: 43.30pt;">
		<td width="67" class="hcp5"><p class="FM_tablebody19pt">Execute</p></td>
		<td width="83" class="hcp5"><p class="FM_tablebody19pt">Execute</p></td>
		<td width="68" class="hcp5"><p class="FM_tablebody19pt">Input</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">TRUE: Instruction 
		 is executed.<sup>*1</sup></p>
		<p class="FM_tablebody19pt">FALSE: Instruction is not exe­cuted.<sup>*2</sup></p></td>
		<td width="82" class="hcp5"><p class="FM_tablebody19pt">BOOL</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="71" class="hcp6"><p class="FM_tablebody19pt">FALSE</p></td>
	</tr>
	<tr style="height: 52.65pt;">
		<td width="67" class="hcp5"><p class="FM_tablebody19pt">Done</p></td>
		<td width="83" class="hcp5"><p class="FM_tablebody19pt">Done</p></td>
		<td rowspan="2" width="68" class="hcp5"><p class="FM_tablebody19ptmiddle">Output</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">TRUE:<span class="hcp8">&#160;&#160;&#160;</span>Normal end.<sup>*3*4</sup></p>
		<p class="FM_tablebody19pt">FALSE:<span class="hcp8">&#160;&#160;&#160;</span>Error 
		 end, execution in progress, or execution condition not met.</p></td>
		<td rowspan="2" width="82" class="hcp5"><p class="FM_tablebody19ptmiddle">BOOL</p></td>
		<td rowspan="2" width="94" class="hcp5"><p class="FM_tablebody19ptmiddle">TRUE or FALSE</p></td>
		<td rowspan="2" width="71" class="hcp6"><p 
			 class="FM_tablebody19ptmiddle">---</p></td>
	</tr>
	<tr style="height: 51.00pt;">
		<td width="67" class="hcp5"><p class="FM_tablebody19pt">Busy</p></td>
		<td width="83" class="hcp5"><p class="FM_tablebody19pt">Busy</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">TRUE:<span class="hcp8">&#160;&#160;&#160;</span>Execution processing 
		 is in progress.</p>
		<p class="FM_tablebody19pt">FALSE:<span class="hcp8">&#160;&#160;&#160;</span>Execution 
		 processing is not in progress.</p></td>
		
	</tr>
</table>

<p class="FM_asterisk1num">*1<span class="hcp8">&#160;&#160;&#160;</span>If 
 the value of <span class="hcp9">Execute</span> is already 
 TRUE when Controller operation starts, the instruction is not executed. 
 To execute the instruction in that case, first change the value of <span class="hcp9">Execute</span> to FALSE.</p>
<p class="FM_asterisk1numnext">*2<span class="hcp8">&#160;&#160;&#160;</span>Processing 
 is completed to the end even if <span class="hcp9">Execute</span> 
 changes to FALSE during execution.</p>
<p class="FM_asterisk1numnext">*3<span class="hcp8">&#160;&#160;&#160;</span>The 
 value of <span class="hcp9">Done</span> changes to FALSE 
 when the execution condition is no longer met after a normal end.</p>
<p class="FM_asterisk1numnext">*4<span class="hcp8">&#160;&#160;&#160;</span>If 
 the execution condition is no longer met when a normal end occurs, the 
 value of <span class="hcp9">Done</span> is TRUE for one 
 task period and it then changes to FALSE.</p>
<p class="FM_asterisk1numnext">&#160;</p>
<p class="FM_body1">Timing charts are given below for instructions that 
 have <span class="hcp9">EN</span> and <span class="hcp9">ENO</span> 
 variables (i.e., instructions that are completed in one task period) and 
 for instructions that have <span class="hcp9">Execute</span> 
 and <span class="hcp9">Busy</span> variables (i.e., instructions 
 that are processed over more than one task period).</p>
<p class="FM_CRhead5"><span class="FM_Wingdings">l</span><span class="FM_Wingdings" 
	 style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span>Instructions 
 Completed in One Task Period</p>
<p class="FM_figbody5"><img src="INTRO-02.gif" alt="" width="507" height="215" border="0" class="hcp12">&#160;</p>
<p class="FM_CRhead5"><span class="FM_Wingdings">l</span><span class="FM_Wingdings" 
	 style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span>Instructions 
 Processed over More Than One Task Period</p>
<p class="FM_figbody5"><img src="INTRO-02_2.gif" alt="" width="600" height="270" border="0" class="hcp12">&#160;</p>
<p class="FM_asterisk1numnext">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4"><span class="hcp9">Error, 
		 ErrorID,</span> and <span class="hcp9">ErrorIDEx</span></p></td>
	</tr>
</table>

<p class="FM_body1"><span class="hcp9">Error</span>, <span class="hcp9">ErrorID</span>, and <span class="hcp9">ErrorIDEx</span> 
 are output variables that show that an error occurred in the execution 
 of some FB instructions.</p>

<table cellspacing="0" width="663" class="hcp2">
	<tr style="height: 26.00pt;" bgcolor="#B3B3B3">
		<td width="72" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Name</p></td>
		<td width="86" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Meaning</p></td>
		<td width="68" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">I/O</p></td>
		<td width="196" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Description</p></td>
		<td width="94" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Data type</p></td>
		<td width="90" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Valid range</p></td>
		<td width="55" bgcolor="#B3B3B3" class="hcp4"><p class="FM_tabletitlec9pt">Initial 
		 value</p></td>
	</tr>
	<tr style="height: 52.65pt;">
		<td width="72" class="hcp5"><p class="FM_tablebody19pt">Error</p></td>
		<td width="86" class="hcp5"><p class="FM_tablebody19pt">Error</p></td>
		<td rowspan="3" width="68" class="hcp5"><p class="FM_tablebody19ptmiddle">Output</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">TRUE:<span class="hcp8">&#160;&#160;&#160;</span>Error end.<sup>*1*2</sup></p>
		<p class="FM_tablebody19pt">FALSE:<span class="hcp8">&#160;&#160;&#160;</span>Normal 
		 end, execution in progress, or execution condition not met.</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19ptmiddle">BOOL</p></td>
		<td width="90" class="hcp5"><p class="FM_tablebody19ptmiddle">TRUE or FALSE</p></td>
		<td rowspan="3" width="55" class="hcp6"><p 
			 class="FM_tablebody19ptmiddle">---</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="72" class="hcp5"><p class="FM_tablebody19pt">ErrorID</p></td>
		<td width="86" class="hcp5"><p class="FM_tablebody19pt">Error code</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">This is the error 
		 ID for an error end.</p>
		<p class="FM_tablebody19pt">The value is WORD#16#0 for a normal 
		 end.</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">WORD</p></td>
		<td rowspan="2" width="90" class="hcp5"><p class="FM_tablebody19ptmiddle">Depends on the 
		 instruction.</p></td>
		
	</tr>
	<tr style="height: 51.00pt;">
		<td width="72" class="hcp5"><p class="FM_tablebody19pt">ErrorIDEx</p></td>
		<td width="86" class="hcp5"><p class="FM_tablebody19pt">Expansion error code</p></td>
		<td width="196" class="hcp5"><p class="FM_tablebody19pt">This is the error 
		 ID for an Expan­sion Unit Hardware Error.</p>
		<p class="FM_tablebody19pt">The value is DWORD#16#0 for a normal 
		 end.</p></td>
		<td width="94" class="hcp5"><p class="FM_tablebody19pt">DWORD</p></td>
		
	</tr>
</table>

<p class="FM_asterisk1num">*1<span class="hcp8">&#160;&#160;&#160;</span>The 
 value of <span class="hcp9">Error</span> changes to FALSE 
 when the execution condition is no longer met after an error end.</p>
<p class="FM_asterisk1numnext">*2<span class="hcp8">&#160;&#160;&#160;</span>If 
 the execution condition is no longer met when an error end occurs, the 
 value of <span class="hcp9">Error</span> is TRUE for one 
 task period and it then changes to FALSE.</p>
<p class="FM_body1">&#160;</p>
<p class="FM_body1">Refer to <span class="FM_Italic">Error Codes That You 
 Can Check with ErrorID</span>&#160;for a list of the error codes that 
 you can check with <span class="FM_Italic">ErrorID</span>&#160;and the 
 <span class="FM_Italic">NJ/NX-series Troubleshooting Manual </span>(Cat. 
 No. W503) for the meanings of the error codes.</p>
<p class="FM_body1">Timing charts are provided below for <span class="hcp9">Execute</span>, 
 <span class="hcp9">Done</span>, <span class="hcp9">Busy</span>, 
 <span class="hcp9">Error</span>, <span class="hcp9">ErrorID</span>, 
 and <span class="hcp9">ErrorIDEx</span>.</p>
<p class="FM_head5"><span class="FM_Wingdings">l</span><span class="FM_Wingdings" 
															 style="font-family: 'Times New Roman'; 
															 font-size: 7.0pt;">&#160;&#160;&#160;</span>Normal 
 End</p>
<p class="FM_figbody5"><img src="INTRO-03.gif" alt="" width="486" height="464" border="0" class="hcp12">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l</span><span class="FM_Wingdings" 
															 style="font-family: 'Times New Roman'; 
															 font-size: 7.0pt;">&#160;&#160;&#160;</span>Error 
 End</p>
<p class="FM_figbody5"><img src="INTRO-04.gif" alt="" width="511" height="472" border="0" class="hcp12">&#160;</p>

<table cellspacing="0" width="661" class="hcp1">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3"><p class="FM_CRhead3">Valid Ranges 
		 and Default Values of Variables</p></td>
	</tr>
</table>

<p class="FM_body1">The valid range of a variable indicates the range of 
 values that variable can take. The default value of a variable indicates 
 the value that is assigned to an input variable when the instruction is 
 executed with­out a parameter assigned to the input variable. These values 
 are defined for each data type. If specific values are not given for an 
 instruction, then the valid ranges and default values of the data types 
 are applied. These variables are indicated by “depends on data type” in 
 the valid range column and by “---” in the input variable default column. 
 The valid ranges and default values of the data types are given in the 
 following tables.</p>

<table cellspacing="0" width="662" class="hcp2">
	<tr style="height: 26.00pt;" bgcolor="#B3B3B3">
		<td width="88" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">Classifica­tion</p></td>
		<td width="63" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">Data type</p></td>
		<td width="296" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">Valid range</p></td>
		<td width="215" bgcolor="#B3B3B3" class="hcp4"><p class="FM_tabletitlec9pt" 
												 style="font-family: Arial, sans-serif; 
												 font-size: 9pt;">Default</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="88" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">Boolean</p></td>
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">BOOL</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">TRUE or FALSE</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">FALSE</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td rowspan="4" width="88" class="hcp5"><p class="FM_tablebody19ptmiddle" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">Bit string</p></td>
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">BYTE</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">BYTE#16#00 to FF</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">BYTE#16#00</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">WORD</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">WORD#16#0000 to FFFF</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">WORD#16#0000</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DWORD</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DWORD#16#00000000 to FFFFFFFF</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">DWORD#16#0000_0000</p></td>
	</tr>
	<tr style="height: 26.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">LWORD</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">LWORD#16#0000000000000000 
		 to FFFFFFFFFFFFFFFF</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">LWORD#16#0000_0000_0000_0000</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td rowspan="8" width="88" class="hcp5"><p class="FM_tablebody19ptmiddle" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">Integers</p></td>
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">USINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">USINT#0 to +255</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">USINT#0</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">UINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">UINT#0 to +65535</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">UINT#0</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">UDINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">UDINT#0 to +4294967295</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">UDINT#0</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">ULINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">ULINT#0 to +18446744073709551615</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">ULINT#0</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">SINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">SINT#-128 to +127</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">SINT#0</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">INT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">INT#-32768 to +32767</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">INT#0</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DINT#-2147483648 to +2147483647</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">DINT#0</p></td>
	</tr>
	<tr style="height: 26.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">LINT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">LINT#-9223372036854775808 
		 to +9223372036854775807</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">LINT#0</p></td>
	</tr>
	<tr style="height: 57.00pt;">
		<td rowspan="2" width="88" class="hcp5"><p class="FM_tablebody19ptmiddle" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">Real numbers</p></td>
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">REAL</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">REAL#-3.402823e+38 to -1.175495e-38,</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">0,</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">+1.175495e-38 to +3.402823e+38,</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">+<span class="hcp13">¥</span>/-<span class="hcp13">¥</span></p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">REAL#0</p></td>
	</tr>
	<tr style="height: 79.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">LREAL</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">LREAL#-1.79769313486231e+308 
		 to<br>
		-2.22507385850721e-308,</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">0,</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">+2.22507385850721e-308 to +1.79769313486231e+308,</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">+<span class="hcp13">¥</span>/-<span class="hcp13">¥</span></p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">LREAL#0</p></td>
	</tr>
	<tr style="height: 54.00pt;">
		<td rowspan="5" width="88" class="hcp5"><p class="FM_tablebody19ptmiddle" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">Times, dura­tions, dates, 
		 and text strings</p></td>
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">TIME</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">T#-9223372036854.775808ms</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">(T#-106751d_23h_47m_16s_854.775808ms) to 
		 T#9223372036854.775807ms</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">(T#+106751d_23h_47m_16s_854.775807ms)</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">T#0s</p></td>
	</tr>
	<tr style="height: 29.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DATE</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">D#1970-01-01 to D#2106-02-06</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">(January 1, 1970 to February 6, 2106)</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">D#1970-01-01</p></td>
	</tr>
	<tr style="height: 51.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">TOD</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">TOD#00:00:00.000000000 to 
		 TOD#23:59:59.999999999</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">(0:00 and 0.000000000 to 23:59 and 59.999999999 
		 seconds)</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">TOD#00:00:00.000000000</p></td>
	</tr>
	<tr style="height: 51.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DT</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">DT#1970-01-01-00:00:00.000000000 
		 to DT#2106-02-06-23:59:59.999999999</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">(0:00 and 0.000000000 on January 1, 1970 
		 to 23:59 and 59.999999999 seconds on February 6, 2106)</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">DT#1970-01-01-00:00:00.000000000</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="63" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">STRING</p></td>
		<td width="296" class="hcp5"><p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
							 font-size: 9pt;">Character code: UTF-8</p>
		<p class="FM_tablebody19pt" style="font-family: Arial, sans-serif; 
			 font-size: 9pt;">0 to 1,986 bytes (1,985 single-byte alphanumeric 
		 characters plus the final NULL character)</p></td>
		<td width="215" class="hcp6"><p class="FM_tablebody19pt" 
			 style="font-family: Arial, sans-serif; font-size: 9pt;">''</p></td>
	</tr>
</table>

<p class="FM_asterisk1numnext">&#160;</p>
<p class="FM_figc">&#160;</p>

<table cellspacing="0" width="661" class="hcp1">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3"><p class="FM_CRhead3">Derivative 
		 Data Types (Enumerations, Structures, and Unions)</p></td>
	</tr>
</table>

<p class="FM_body1">Variables that use derivative data types (enumerations, 
 structures, and unions) are specified as such in the tables of variable 
 data types. The notation is described below.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4">Enumerations</p></td>
	</tr>
</table>

<p class="FM_body1">The data type for an enumerated variable is given within 
 the table. The following is an example. Here, the data type of the <span class="hcp9">Out</span> variable is enumerated type 
 _eDAYOFWEEK. The enumerators are described in the description of the function 
 of the instruction.</p>

<table cellspacing="0" width="661" class="hcp2">
	<tr style="height: 46.00pt;" bgcolor="#B3B3B3">
		<td rowspan="2" width="73" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">&#160;</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Boolean</p></td>
		<td colspan="4" width="118" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Bit strings</p></td>
		<td colspan="8" width="235" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Integers</p></td>
		<td colspan="2" width="59" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Real<br>
		numbers</p></td>
		<td colspan="5" width="147" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Times, durations, dates, and text 
		 strings</p></td>
		
	</tr>
	<tr style="height: 43.00pt;" bgcolor="#B3B3B3">
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BOOL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BYTE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">WORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">USINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UDINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">ULINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">SINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">INT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">REAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LREAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TIME</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DATE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TOD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp6"><p 
			 class="FM_tabletitlec9pt">STRING</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="73" class="hcp5"><p class="FM_tablebody19pt">In</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp6"><p class="FM_tablebodyc9pt">&#160;</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="73" class="hcp5"><p class="FM_tablebody19pt">Out</p></td>
		<td colspan="20" width="588" class="hcp5"><p class="FM_tablebodyc9pt">Refer to <span class="hcp9">Function</span> 
		 for the enumerators of the enumerated type _eDAYOFWEEK.</p></td>
		
	</tr>
</table>

<p class="FM_head4">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4">Structures and Unions</p></td>
	</tr>
</table>

<p class="FM_body1">The data type for a structure or union variable is 
 given within the table. The following is an example. Here, the data type 
 of the <span class="hcp9">In1</span> variable is structure 
 _sPORT. Details on the members of a structure or union are given in the 
 description of the function of the instruction.</p>

<table cellspacing="0" width="661" class="hcp2">
	<tr style="height: 46.00pt;" bgcolor="#B3B3B3">
		<td rowspan="2" width="73" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">&#160;</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Boolean</p></td>
		<td colspan="4" width="118" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Bit strings</p></td>
		<td colspan="8" width="235" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Integers</p></td>
		<td colspan="2" width="59" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Real<br>
		numbers</p></td>
		<td colspan="5" width="147" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Times, durations, dates, and text 
		 strings</p></td>
		
	</tr>
	<tr style="height: 43.00pt;" bgcolor="#B3B3B3">
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BOOL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BYTE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">WORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">USINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UDINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">ULINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">SINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">INT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">REAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LREAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TIME</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DATE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TOD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp6"><p 
			 class="FM_tabletitlec9pt">STRING</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="73" class="hcp5"><p class="FM_tablebody19pt">In1</p></td>
		<td colspan="20" width="588" class="hcp5"><p class="FM_tablebodyc9pt">Refer to <span class="hcp9">Function</span> 
		 for details on the structure _sPORT.</p></td>
		
	</tr>
</table>

<p class="FM_body1">The tables also indicate any variables for which you 
 can specify a structure, a structure member, a union, or a union member 
 as the parameter.<br>
In the following example, you can specify a parameter with a basic data 
 type, or you can specify a struc­ture, a structure member, a union, or 
 a union member for the <span class="hcp9">In1</span> variable. 
 To specify a structure or union, specify only the structure or the union 
 as the parameter. To specify a structure member or a union member, specify 
 the member as the parameter.</p>

<table cellspacing="0" width="661" class="hcp2">
	<tr style="height: 46.00pt;" bgcolor="#B3B3B3">
		<td rowspan="2" width="73" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">&#160;</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Boolean</p></td>
		<td colspan="4" width="118" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Bit strings</p></td>
		<td colspan="8" width="235" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Integers</p></td>
		<td colspan="2" width="59" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Real<br>
		numbers</p></td>
		<td colspan="5" width="147" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Times, durations, dates, and text 
		 strings</p></td>
		
	</tr>
	<tr style="height: 43.00pt;" bgcolor="#B3B3B3">
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BOOL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BYTE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">WORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">USINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UDINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">ULINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">SINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">INT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">REAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LREAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TIME</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DATE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TOD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp6"><p 
			 class="FM_tabletitlec9pt">STRING</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td rowspan="2" width="73" class="hcp5"><p class="FM_tablebody19pt">In1</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp6"><p class="FM_tablebodyc9pt">OK</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td colspan="20" width="588" class="hcp5"><p class="FM_tablebodyc9pt">A structure, structure 
		 member, union, or union member can also be specified.</p></td>
		
	</tr>
</table>

<p class="FM_CRhead3">&#160;</p>

<table cellspacing="0" width="661" class="hcp1">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3"><p class="FM_CRhead3">Array Specifications</p></td>
	</tr>
</table>

<p class="FM_body1">Array variable names are followed by “[]” and “(array)” 
 is specified. For these variables, specify an ele­ment of the array (i.e., 
 specify the subscript) as the parameter.<br>
An example is shown below. Here, the table shows that <span class="hcp9">In1[]</span> 
 is a BYTE array.</p>

<table cellspacing="0" width="661" class="hcp2">
	<tr style="height: 46.00pt;" bgcolor="#B3B3B3">
		<td rowspan="2" width="73" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">&#160;</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Boolean</p></td>
		<td colspan="4" width="118" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Bit strings</p></td>
		<td colspan="8" width="235" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Integers</p></td>
		<td colspan="2" width="59" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Real<br>
		numbers</p></td>
		<td colspan="5" width="147" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Times, durations, dates, and text 
		 strings</p></td>
		
	</tr>
	<tr style="height: 43.00pt;" bgcolor="#B3B3B3">
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BOOL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BYTE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">WORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">USINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UDINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">ULINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">SINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">INT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">REAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LREAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TIME</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DATE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TOD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp6"><p 
			 class="FM_tabletitlec9pt">STRING</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="73" class="hcp5"><p class="FM_tablebody19pt">In1[] (array)</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">OK</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp5"><p class="FM_tablebodyc9pt">&#160;</p></td>
		<td width="29" class="hcp6"><p class="FM_tablebodyc9pt">&#160;</p></td>
	</tr>
</table>

<p class="FM_body1">The data type table indicates the arrays for which 
 structures and unions can be used as elements, as shown in the following 
 example. For these variables, specify an element of the array (i.e., specify 
 the subscript) as the parameter.</p>

<table cellspacing="0" width="661" class="hcp2">
	<tr style="height: 46.00pt;" bgcolor="#B3B3B3">
		<td rowspan="2" width="73" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">&#160;</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Boolean</p></td>
		<td colspan="4" width="118" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Bit strings</p></td>
		<td colspan="8" width="235" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Integers</p></td>
		<td colspan="2" width="59" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Real<br>
		numbers</p></td>
		<td colspan="5" width="147" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Times, durations, dates, and text 
		 strings</p></td>
		
	</tr>
	<tr style="height: 43.00pt;" bgcolor="#B3B3B3">
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BOOL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BYTE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">WORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">USINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UDINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">ULINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">SINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">INT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">REAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LREAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TIME</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DATE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TOD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp6"><p 
			 class="FM_tabletitlec9pt">STRING</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="73" class="hcp5"><p class="FM_tablebody19pt">In1[] (array)</p></td>
		<td colspan="20" width="588" class="hcp5"><p class="FM_tablebodyc9pt">Arrays of structures 
		 or unions can also be specified.</p></td>
		
	</tr>
</table>

<p class="FM_body1">The table indicates any variables for which you can 
 specify either an array or an array element as the parameter.<br>
In the following example, you can specify a parameter with a basic data 
 type, or you can specify an array or an array element. To specify an array, 
 specify only the array as the parameter. To specify an array element, 
 specify an element of the array (i.e., specify the subscript) as the parameter.</p>

<table cellspacing="0" width="661" class="hcp2">
	<tr style="height: 46.00pt;" bgcolor="#B3B3B3">
		<td rowspan="2" width="73" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">&#160;</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Boolean</p></td>
		<td colspan="4" width="118" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Bit strings</p></td>
		<td colspan="8" width="235" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Integers</p></td>
		<td colspan="2" width="59" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Real<br>
		numbers</p></td>
		<td colspan="5" width="147" bgcolor="#B3B3B3" class="hcp3"><p 
			 class="FM_tabletitlec9pt">Times, durations, dates, and text 
		 strings</p></td>
		
	</tr>
	<tr style="height: 43.00pt;" bgcolor="#B3B3B3">
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BOOL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">BYTE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">WORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LWORD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">USINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">UDINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">ULINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">SINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">INT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LINT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">REAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">LREAL</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TIME</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DATE</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">TOD</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp5"><p class="FM_tabletitlec9pt">DT</p></td>
		<td width="29" bgcolor="#B3B3B3" class="hcp6"><p 
			 class="FM_tabletitlec9pt">STRING</p></td>
	</tr>
	<tr style="height: 15.00pt;">
		<td width="73" class="hcp5"><p class="FM_tablebody19pt">In1</p></td>
		<td colspan="20" width="588" class="hcp5"><p class="FM_tablebodyc9pt">An array or array 
		 element can also be specified.</p></td>
		
	</tr>
</table>

<p class="FM_CRhead3">&#160;</p>

<table cellspacing="0" width="661" class="hcp1">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3"><p class="FM_CRhead3">Others</p></td>
	</tr>
</table>

<p class="FM_head4">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4">Errors Detected for All Instructions</p></td>
	</tr>
</table>

<p class="FM_body1">The errors that can occur for an instruction are given 
 in the <span class="hcp9">Precautions for Correct Use</span> 
 section. The fol­lowing three errors, however, can be detected for any 
 instruction. They are not listed in the <span class="hcp9">Precautions 
 for Correct Use</span> sections.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Reading or writing elements that 
 exceed the range of an array variable.<br>
Example: Setting <span class="hcp9">a[4]</span> for an input 
 variable for the array variable <span class="hcp9">a[0..3]</span>.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Passing parameters that are not 
 variables to instructions for which array variables are defined for input, 
 output, or in-out variables.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Assigning a text string that is 
 longer than the defined number of bytes to a STRING variable.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Assigning a text string that does 
 not end in a NULL character to a STRING variable.</p>
<p class="FM_bul1"><span class="FM_Helvetica" style="font-family: 'Times New Roman'; 
						 font-size: 7.0pt;">•&#160;&#160;&#160;</span><span 
	 class="FM_Helvetica">&#160;</span>Dividing an integer variable by 
 0.</p>
<p class="FM_bul1">&#160;</p>

<table cellspacing="0" width="620" class="hcp10">
	<tr style="height: 20.00pt;">
		<td width="620" class="hcp11"><p class="FM_head4">Precautions for All Instructions</p></td>
	</tr>
</table>

<p class="FM_1pt">&#160;</p>
<p class="FM_body1">The amount of processing that is required for some 
 instructions depends on the parameters that you connect. If there is too 
 much processing, the instruction execution time increases and the task 
 period may be exceeded. This will result in a Task Period Exceeded error. 
 Adjust the amount of processing to a suitable amount.</p>
<p class="fm_body1">&#160;</p>
</body>
</html>
