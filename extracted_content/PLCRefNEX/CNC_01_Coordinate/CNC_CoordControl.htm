
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">

 <meta name="generator" content="Adobe RoboHelp 11">
<title>CNC_CoordControl</title>
<link rel="stylesheet" href="../00INTRO.css" type="text/css">
<style title="hcp" type="text/css">
<!--
th.hcp1 { border-top:solid 1px #000000;
border-right:solid 1px #000000;
border-bottom:solid 1px #000000;
vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
th.hcp2 { border-top:solid 1px #000000;
border-bottom:solid 1px #000000;
vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
td.hcp3 { border-right:solid 1px #000000;
border-bottom:solid 1px #000000;
vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
div.hcp4 { text-align:center; }
td.hcp5 { border-bottom:solid 1px #000000;
vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
span.hcp6 { font-style:italic; }
table.hcp7 { padding-top:5.00pt;
padding-right:4.00pt;
padding-bottom:1.00pt; }
td.hcp8 { vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
table.hcp9 { padding-top:6.00pt;
padding-right:4.00pt;
padding-bottom:1.00pt;
margin-left:31.18pt; }
td.hcp10 { border-left:solid 7px #000000;
border-bottom:solid 1px #000000;
vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
table.hcp11 { padding-left:4.00pt;
padding-top:3.00pt;
padding-right:4.00pt;
padding-bottom:1.00pt;
margin-left:42.52pt; }
table.hcp12 { margin-left:42.52pt;
margin-bottom:3.50pt;
margin-top:6.00pt; }
span.hcp13 { word-spacing:normal;
font:6.0pt 'Times New Roman'; }
span.hcp14 { font-weight:bold;
text-decoration:underline; }
p.hcp15 { text-align:left; }
table.hcp16 { padding-left:4.00pt;
padding-top:6.00pt;
padding-right:4.00pt;
padding-bottom:5.00pt;
margin-left:42.52pt; }
td.hcp17 { border:solid 1px #000000;
vertical-align:top;
padding-left:6.00pt;
padding-top:3.00pt;
padding-right:6.00pt;
padding-bottom:3.00pt; }
div.hcp18 { text-align:left; }
span.hcp19 { font-family:Times New Roman;
font-size:7.0pt; }
-->
</style>
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

<p class="Title">CNC_CoordControl</p>
<p class="FM_body1">Executes the NC program, and starts controlling the 
 specified CNC coordinate system.</p>
<p class="FM_tablespec">&#160;</p>

<table style="padding-left: 4.00pt; padding-top: 3.00pt; padding-right: 4.00pt; 
		 padding-bottom: 1.00pt;" cellspacing="0" width="661">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="144" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Instruction</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="57" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">FB/FUN</p></th>
		<th width="197" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Graphic 
		 expression</p></th>
		<th width="189" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">ST expression</p></th>
	</tr>
	<tr style="height: 148.00pt;">
		<td width="144" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC_CoordControl</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC Coor­dinate Sys­tem NC Control</p></td>
		<td width="57" class="hcp3"><p 
			 class="FM_tablebody19pt">FB</p></td>
		<td width="197" class="hcp3"><p 
			 class="FM_tablebodyc9pt"><span class="FM_Arial">CNC_CoordControl_instance</span></p>
		<div class="hcp4">
			<img alt="CNC_CoordControl_010.jpg" id="image0" src="CNC_CoordControl_010.jpg" width="193" height="147" border="0"> 
		</div>
		<p class="FM_body1">&#160;</p></td>
		<td width="189" class="hcp5"><p class="FM_tablebody19pt">CNC_CoordControl_instance 
		 (</p>
		<p class="FM_tablebody19pt">Coord :=<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">ControlInputs :=<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">ControlOutputs :=<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">Enable :=<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">Enabled =&gt;<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">Busy =&gt;<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">Error =&gt;<span class="hcp6">parameter</span>,</p>
		<p class="FM_tablebody19pt">ErrorID =&gt;<span class="hcp6">parameter</span></p>
		<p class="FM_tablebody19pt">);</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="661" class="hcp7">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3" class="hcp8"><p class="FM_CRhead3">Variables</p></td>
	</tr>
</table>


<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Input Variables</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Meaning</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Valid 
		 range</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Default</p></th>
		<th width="227" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Description</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Enable</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Execute</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="227" class="hcp5"><p class="FM_tablebody19pt">Executes 
		 the instruction while this vari­able is TRUE.</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Output Variables</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Meaning</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Valid 
		 range</p></th>
		<th width="302" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Description</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Enabled</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Enable</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="302" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 when the CNC coordinate system is being con­trolled.</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Busy</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Executing</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="302" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 when the instruction is acknowledged.</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Error</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Error</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="302" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 while there is an error.</p></td>
	</tr>
	<tr style="height: 28.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">ErrorID</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Error Code</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">WORD</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt"><a name="FTB_0"></a><a href="#FTH_0"><sup>*1</sup></a>&#160;</p></td>
		<td width="302" class="hcp5"><p class="FM_tablebody19pt">Contains 
		 the error code when an error occurs.</p>
		<p class="FM_tablebody19pt">A value of 16#0000 indicates normal 
		 execution.</p></td>
	</tr>
</table>


<table width="605" class="hcp12">
	<tr>
		<td><p class="FM_tablebody1c9pt"><a name="FTH_0"></a><sup><a href="#FTB_0">*1</a></sup>Refer 
		 to <span class="FM_italic">Troubleshooting</span>.</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Output 
 Variable Update Timing</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="265" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Timing 
		 for changing to TRUE</p></th>
		<th width="265" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Timing for 
		 changing to FALSE</p></th>
	</tr>
	<tr style="height: 27.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Enabled</p></td>
		<td width="265" class="hcp3"><p 
			 class="FM_tablebody19pt">When the instruction is started.</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebul9pt"><span class="hcp13">&#160;&#160;&#160;</span>After 
		 one period when <span class="FM_italic">Enable</span> is FALSE.</p>
		<p class="FM_tablebul9pt"><span class="hcp13">&#160;&#160;&#160;</span>When 
		 <span class="FM_italic">Error</span> changes to TRUE.</p></td>
	</tr>
	<tr style="height: 27.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Busy</p></td>
		<td width="265" class="hcp3"><p 
			 class="FM_tablebody19pt">When Enable changes to TRUE.</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebul9pt"><span class="hcp13">&#160;&#160;&#160;</span>When 
		 <span class="FM_italic">Error</span> changes to TRUE.</p>
		<p class="FM_tablebul9pt"><span class="hcp13">&#160;&#160;&#160;</span>When 
		 <span class="FM_italic">Enable</span> changes to FALSE.</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Error</p></td>
		<td width="265" class="hcp3"><p 
			 class="FM_tablebody19pt">When there is an error in the execution 
		 condi­tions or input parameters for the instruction.</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">When 
		 the error is cleared.</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">In-Out Variables</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="91" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="91" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Meaning</p></th>
		<th width="126" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Valid 
		 range</p></th>
		<th width="222" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Description</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="91" class="hcp3"><p 
			 class="FM_tablebody19pt">Coord</p></td>
		<td width="91" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC Coordi­nate System</p></td>
		<td width="126" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC<br>
		_COORD_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="222" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the CNC coordinate system.</p></td>
	</tr>
	<tr style="height: 64.00pt;">
		<td width="91" class="hcp3"><p 
			 class="FM_tablebody19pt">ControlInputs</p></td>
		<td width="91" class="hcp3"><p 
			 class="FM_tablebody19pt">Numerical Control Input</p></td>
		<td width="126" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC_CTR_<br>
		INPUTS_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="222" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the interface from the PLC to the NC.</p>
		<p class="FM_tablebody19pt">Create a user-defined variable with 
		 a data type of _sCNC_CTR_IN­PUTS_REF.</p></td>
	</tr>
	<tr style="height: 64.00pt;">
		<td width="91" class="hcp3"><p 
			 class="FM_tablebody19pt">ControlOutputs</p></td>
		<td width="91" class="hcp3"><p 
			 class="FM_tablebody19pt">Numerical Control Output</p></td>
		<td width="126" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC_CTR_<br>
		OUTPUTS_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="222" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the interface from the NC to the PLC.</p>
		<p class="FM_tablebody19pt">Create a user-defined variable with 
		 a data type of _sCNC_CTR_OUT­PUTS_REF.</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>_sCNC_CTR_INPUTS_REF</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 25.00pt;" bgcolor="#B3B3B3">
		<th width="121" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Meaning</p></th>
		<th width="68" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="60" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Valid 
		 range</p></th>
		<th width="280" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Function</p></th>
	</tr>
	<tr style="height: 27.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CycleStart</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Cycle Start</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Starts 
		 the execution of the NC program when this variable changes to 
		 TRUE.<a name="FTB_1"></a><a href="#FTH_1"><sup>*1</sup></a></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">SingleBlock</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Single Block Valid</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Executes 
		 the NC program on a block-by-block basis if this variable changes 
		 to TRUE when the execution of the NC program starts.<a name="FTB_2"></a><a 
		 href="#FTH_2"><sup>*2</sup></a><sup>,<a name="FTB_3"></a><a href="#FTH_3"><sup>*3</sup></a></sup></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">MachineLock</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Machine Lock Valid</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Executes 
		 the NC program in <span class="FM_italic">MachineLock</span>&#160;if 
		 this variable changes to TRUE when the execution of the NC program 
		 starts.<sup>* 2</sup></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">DryRun</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Dry Run Valid</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Executes 
		 the NC program in <span class="FM_italic">DryRun</span>&#160;if 
		 this variable changes to TRUE when the execution of the NC program 
		 starts.<sup>*2</sup></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">AuxiliaryLock</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">M Code Lock Valid</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Executes 
		 the NC program in <span class="FM_italic">AuxiliaryLock</span>&#160;if 
		 this variable changes to TRUE when the execution of the NC program 
		 starts.<sup>*2</sup></p></td>
	</tr>
	<tr style="height: 27.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">FeedHold</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Feed Hold</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Interrupts 
		 the NC program when this variable changes to TRUE.<sup>*1</sup></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Reset</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Reset</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Interrupts 
		 the NC program that is currently being executed, and initializes 
		 its status when this vari­able changes to TRUE.<sup>*1</sup></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">BackTrace</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Back Trace Enabled</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Traces 
		 the NC program in <span class="FM_italic">Hold</span>&#160;backward 
		 when this variable changes to TRUE and <span class="FM_italic">CycleStart</span>&#160;(Cycle 
		 Start) is started.<sup>*3</sup></p></td>
	</tr>
	<tr style="height: 43.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">OptionalInputs</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Optional Input</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">ARRAY</p>
		<p class="FM_tablebody19pt">[0..31] OF BOOL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or FALSE</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Inputs 
		 an optional signal to the NC program.</p>
		<p class="FM_tablebody19pt">0 bit: Signal for Optional Stop (M01)</p>
		<p class="FM_tablebody19pt">1 to 31 bit: Signal for Option block 
		 skip</p></td>
	</tr>
	<tr style="height: 37.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ProgramNo</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">NC Pro­gram Num­ber</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">UINT</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">1 to 9999</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the NC program number.<sup>*2</sup></p></td>
	</tr>
	<tr style="height: 109.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">FeedrateVelFactor</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Feedrate Override Factor</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 500</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the feedrate override factor.</p>
		<p class="FM_tablebody19pt">The valid range of the override factor 
		 is 0.01 to 500.00.</p>
		<p class="FM_tablebody19pt">Values of 500.00 or more are treated 
		 as 500 and values less than 0.01 (including negative values) are 
		 treated as 0.01.</p>
		<p class="FM_tablebody19pt">The override factor is 0 only when 
		 0 is specified.</p>
		<p class="FM_tablebody19pt">The unit is [%].</p></td>
	</tr>
	<tr style="height: 121.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">FeedrateVelFac­torChangeRate</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Feedrate Override Change Rate</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 500</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the feedrate override change rate.</p>
		<p class="FM_tablebody19pt">The valid range of the override change 
		 rate is 0.01 to 500.00.</p>
		<p class="FM_tablebody19pt">Values of 500.00 or more are treated 
		 as 500 and values less than 0.01 (including negative values) are 
		 treated as 0.01.</p>
		<p class="FM_tablebody19pt">The override change rate is 0 only 
		 when 0 is spec­ified.</p>
		<p class="FM_tablebody19pt">The unit is [%/s].</p></td>
	</tr>
	<tr style="height: 109.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">SpindleVelFactor</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">Spindle Velocity Override Factor</p></td>
		<td width="68" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="60" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 500</p></td>
		<td width="280" class="hcp5"><p class="FM_tablebody19pt">Specifies 
		 the spindle velocity override factor.</p>
		<p class="FM_tablebody19pt">The valid range of the override factor 
		 is 0.01 to 500.00.</p>
		<p class="FM_tablebody19pt">Values of 500.00 or more are treated 
		 as 500 and values less than 0.01 (including negative values) are 
		 treated as 0.01.</p>
		<p class="FM_tablebody19pt">The override factor is 0 only when 
		 0 is specified.</p>
		<p class="FM_tablebody19pt">The unit is [%].</p></td>
	</tr>
</table>


<table width="605" class="hcp12">
	<tr>
		<td><p class="FM_tablebody1c9pt"><a name="FTH_1"></a><sup><a href="#FTB_1">*1</a></sup>The 
		 inputs to send a command for CNC Coordinate System NC Control 
		 are <span class="FM_italic">CycleStart</span>, <span class="hcp6">Reset</span>, 
		 and <span class="FM_italic">FeedHold</span>. If these variables 
		 are input simultaneously, the priority order conforms to <span 
		 class="FM_italic">Reset</span>&#160;&gt; <span class="FM_italic">FeedHold</span>&#160;&gt; 
		 <span class="FM_italic">CycleStart</span>.</p>
		<p class="FM_tablebody1c9pt"><a name="FTH_2"></a><sup><a href="#FTB_2">*2</a></sup><span 
		 class="FM_italic">SingleBlock</span>, <span class="FM_italic">MachineLock</span>, 
		 <span class="FM_italic">AuxiliaryLock</span>, <span class="FM_italic">DryRun</span>, 
		 and <span class="FM_italic">ProgramNo</span>&#160;are <span class="FM_italic">CycleStart</span>&#160;input 
		 options in <span class="FM_italic">Standby</span>. The NC program 
		 runs in accordance with these options while Operating.</p>
		<p class="FM_tablebody1c9pt"><a name="FTH_3"></a><sup><a href="#FTB_3">*3</a></sup><span 
		 class="FM_italic">SingleBlock</span>&#160;and <span class="FM_italic">BackTrace</span>&#160;are 
		 <span class="FM_italic">CycleStart</span>&#160;input options in 
		 <span class="FM_italic">Hold</span>.</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>_sCNC_CTR_OUTPUTS_REF</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="121" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Variable</p></th>
		<th width="87" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Meaning</p></th>
		<th width="98" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="113" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Valid 
		 range</p></th>
		<th width="185" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Description</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CycleStartReady</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Cycle Start Ready</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or<br>
		FALSE</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 when the NC program is ready to accept cycle start.</p></td>
	</tr>
	<tr style="height: 37.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ManualIntervention­Ready</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Manual Inter­vention Ready</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or<br>
		FALSE</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 when the NC program is ready to accept the manual inter­vention.</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">BackTraceReady</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Back Trace Ready</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or<br>
		FALSE</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 when the NC program is ready to accept the back trace.</p></td>
	</tr>
	<tr style="height: 37.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ProgramEnd</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Program Completed</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or<br>
		FALSE</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 when the NC program ter­minates normally, or FALSE when the NC 
		 program starts.</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Error</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Error</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">TRUE or<br>
		FALSE</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">TRUE 
		 while there is an error.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ErrorID</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Error Code</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">WORD</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">Refer to <span class="FM_italic">Error 
		 Lists</span></p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">Contains 
		 the error code when an error occurs.</p>
		<p class="FM_tablebody19pt">A value of 16#0000 indicates normal 
		 execution.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ExecutingStatus</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">NC Program Execution Status</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">ENUM</p>
		<p class="FM_tablebody19pt">_eCNC<br>
		_EXECUTING<br>
		_STATE</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">0: _cncStandby</p>
		<p class="FM_tablebody19pt">1: _cncExecuting</p>
		<p class="FM_tablebody19pt">2: _cncHold</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the execution status of the NC program.</p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CurrentProgramNo</p>
		<p class="FM_tablebody19pt">&#160;</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Executing Program Number</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">UINT</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 9,999</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the program number of the program that is currently being executed. 
		 Default: 0<a name="FTB_4"></a><a href="#FTH_4"><sup>*1</sup></a></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CurrentBlockNo</p>
		<p class="FM_tablebody19pt">&#160;</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Executing Block Number</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">UDINT</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 4,294,967,295</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the block number of the block that is currently being exe­cuted. 
		 Default: 0<sup>*1</sup></p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CurrentLookahead<br>
		BlockNo</p>
		<p class="FM_tablebody19pt">&#160;</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Look-ahead Block Number</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">UDINT</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 4,294,967,295</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the block number of the block that is currently being read ahead. 
		 Default: 0<sup>*1</sup></p></td>
	</tr>
	<tr style="height: 39.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ModalStatus</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Modal Status</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC<br>
		_MODAL_REF</p></td>
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">-</p></td>
		<td width="185" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the status of the modal that is currently being read ahead.<sup>*1</sup></p></td>
	</tr>
</table>


<table width="605" class="hcp12">
	<tr>
		<td><p class="FM_tablebody1c9pt"><a name="FTH_4"></a><sup><a href="#FTB_4">*1</a></sup>The 
		 value is initialized when the NC program terminates normally or 
		 when the reset is executed. <br>
		The previous value is retained when the NC program is aborted by 
		 CNC_CoordStop or Error Stop and the val­ue is initialized when 
		 the NC program is executed by the reset execution or Cycle Start.</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>_sCNC_MODAL_REF</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="121" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Variable</p></th>
		<th width="87" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Meaning</p></th>
		<th width="98" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="98" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Valid 
		 range</p></th>
		<th width="200" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Description</p></th>
	</tr>
	<tr style="height: 144.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">NonModal</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">NonModal State</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">DWORD</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to FFFFFFFF</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<a name="FTB_5"></a><a href="#FTH_5"><sup>*1</sup></a></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">Bit0: G04</p>
		<p class="FM_tablebody19pt">Bit1: G28</p>
		<p class="FM_tablebody19pt">Bit2: G30</p>
		<p class="FM_tablebody19pt">Bit3: G31</p>
		<p class="FM_tablebody19pt">Bit4: G52</p>
		<p class="FM_tablebody19pt">Bit5: G53</p></td>
	</tr>
	<tr style="height: 114.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Motion</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Motion</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 3</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 1<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G00</p>
		<p class="FM_tablebody19pt">1: G01</p>
		<p class="FM_tablebody19pt">2: G02</p>
		<p class="FM_tablebody19pt">3: G03</p></td>
	</tr>
	<tr style="height: 99.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Plane</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Plane</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 2</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G17</p>
		<p class="FM_tablebody19pt">1: G18</p>
		<p class="FM_tablebody19pt">2: G19</p></td>
	</tr>
	<tr style="height: 84.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Distance</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Distance</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G90</p>
		<p class="FM_tablebody19pt">1: G91</p></td>
	</tr>
	<tr style="height: 108.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Units</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Unit</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. The 
		 default value follows the carte­sian axis command unit of the 
		 CNC coordinate system parameter.<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G20</p>
		<p class="FM_tablebody19pt">1: G21</p></td>
	</tr>
	<tr style="height: 99.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ToolRadius</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Tool Compen­sation</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 2</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G40</p>
		<p class="FM_tablebody19pt">1: G41</p>
		<p class="FM_tablebody19pt">2: G42</p></td>
	</tr>
	<tr style="height: 99.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ToolLengthOffset</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Tool Length Compensa­tion</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 2</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 2<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G43</p>
		<p class="FM_tablebody19pt">1: G44</p>
		<p class="FM_tablebody19pt">2: G49</p></td>
	</tr>
	<tr style="height: 99.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CannedCycle</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Fixed Cycle</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 2</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 1<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G74</p>
		<p class="FM_tablebody19pt">1: G80</p>
		<p class="FM_tablebody19pt">2: G84</p></td>
	</tr>
	<tr style="height: 84.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">ReturnLevel</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Return Point Specification</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G98</p>
		<p class="FM_tablebody19pt">1: G99</p></td>
	</tr>
	<tr style="height: 84.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Scaling</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Scaling</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G50</p>
		<p class="FM_tablebody19pt">1: G51</p></td>
	</tr>
	<tr style="height: 159.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">CsSelection</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Coordinate System Selection</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 6</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: Work coordinate system disable</p>
		<p class="FM_tablebody19pt">1: G54</p>
		<p class="FM_tablebody19pt">2: G55</p>
		<p class="FM_tablebody19pt">3: G56</p>
		<p class="FM_tablebody19pt">4: G57</p>
		<p class="FM_tablebody19pt">5: G58</p>
		<p class="FM_tablebody19pt">6: G59</p></td>
	</tr>
	<tr style="height: 84.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">PathControl</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Path Control</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 1<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G61</p>
		<p class="FM_tablebody19pt">1: G64</p></td>
	</tr>
	<tr style="height: 84.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Rotation</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Rotation</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 1<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G68</p>
		<p class="FM_tablebody19pt">1: G69</p></td>
	</tr>
	<tr style="height: 84.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Mirroring</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Mirroring</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0<sup>*1</sup></p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G50.1</p>
		<p class="FM_tablebody19pt">1: G51.1</p></td>
	</tr>
	<tr style="height: 82.00pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">MultiBlockAcc</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Multi-block Accelera­tion/Decelera­tion</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">USINT</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 to 1</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the G code modal status that is currently being executed. Default: 
		 0</p>
		<p class="FM_tablebody19pt">&#160;</p>
		<p class="FM_tablebody19pt">0: G500</p>
		<p class="FM_tablebody19pt">1: G501</p></td>
	</tr>
	<tr style="height: 42.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">S</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">S Code</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 min.</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the S code that is currently being executed.</p>
		<p class="FM_tablebody19pt">Default: 0<a name="FTB_6"></a><a href="#FTH_6"><sup>*2</sup></a></p></td>
	</tr>
	<tr style="height: 42.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">F</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">F Code</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 min.</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the F code that is currently being executed.</p>
		<p class="FM_tablebody19pt">Default: 0<sup>*1</sup></p></td>
	</tr>
	<tr style="height: 66.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Ta</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Ta Code</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 min.</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the Ta code that is cur­rently being executed.</p>
		<p class="FM_tablebody19pt">The default value is the Accelera­tion 
		 Time of the CNC coordinate system parameters.<sup>*1 </sup></p></td>
	</tr>
	<tr style="height: 66.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Td</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Td Code</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 min.</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the Td code that is cur­rently being executed.</p>
		<p class="FM_tablebody19pt">The default value is the Decelera­tion 
		 Time of the CNC coordinate system parameters.<sup>*1 </sup></p></td>
	</tr>
	<tr style="height: 66.40pt;">
		<td width="121" class="hcp3"><p 
			 class="FM_tablebody19pt">Ts</p></td>
		<td width="87" class="hcp3"><p 
			 class="FM_tablebody19pt">Ts Code</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">LREAL</p></td>
		<td width="98" class="hcp3"><p 
			 class="FM_tablebody19pt">0 min.</p></td>
		<td width="200" class="hcp5"><p class="FM_tablebody19pt">Outputs 
		 the Ts code of the modal that is currently being executed.</p>
		<p class="FM_tablebody19pt">The default value is the Jerk Time 
		 of the CNC coordinate system parameters.<sup>*1</sup></p></td>
	</tr>
</table>


<table width="605" class="hcp12">
	<tr>
		<td><p class="FM_tablebody1c9pt"><a name="FTH_5"></a><sup><a href="#FTB_5">*1</a></sup>The 
		 value is initialized when the NC program terminates normally or 
		 when the reset is executed. The previous value is retained when 
		 the NC program is aborted by CNC_CoordStop or Error Stop and the 
		 value is initialized when the NC program is executed by the reset 
		 execution or Cycle Start.</p>
		<p class="FM_tablebody1c9pt"><a name="FTH_6"></a><sup><a href="#FTB_6">*2</a></sup>The 
		 value is retained, not initialized when the NC program terminates 
		 normally or when the reset is executed. If the NC program is aborted 
		 by CNC_CoordStop or Error Stop, the value is initialized when 
		 the spindle axis assignment is performed. The value is retained 
		 when the spindle axis assignment is not performed.</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>
<p class="FM_iconbody1" style="font-weight: bold; text-decoration: underline; "><span class="hcp14">Precautions 
 for Correct Use</span></p>
<p class="FM_iconendline">&#160;</p>
<p class="FM_iconbody1">Each actual structure includes Reserved areas. 
 Do not create a sequence control program that refers to Reserved areas.</p>
<p class="FM_iconbody1">&#160;</p>

<table cellspacing="0" width="661" class="hcp7">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3" class="hcp8"><p class="FM_CRhead3">Functions</p></td>
	</tr>
</table>

<p class="FM_body1">This instruction updates the values of <span class="FM_italic">ControlInputs</span>&#160;(Numerical 
 Control Inputs) and <span class="FM_italic">ControlOutputs</span>&#160;(Numerical 
 Control Outputs) in-out variables that are used to control NC programs 
 in the CNC coordi­nate system. When <span class="FM_italic">Enabled</span>&#160;is 
 TRUE, the values of <span class="FM_italic">ControlInputs</span>&#160;(Numerical 
 Control Inputs) and <span class="FM_italic">Con­trolOutputs</span> (Numerical 
 Control Outputs) are updated with this instruction.</p>
<p class="FM_body1">The instruction can execute the NC program loaded into 
 the NC program buffer. To load data in the NC program buffer, download 
 the NC program created with Sysmac Studio in advance, or load the NC pro­gram 
 saved in the SD Memory Card using the CNC_LoadProgramFile instruction.</p>
<p class="FM_body1">Only one NC program can be executed simultaneously 
 in a CNC coordinate system.</p>
<p class="FM_body1">The figure below shows the relationships between this 
 instructions operations and the CNC coordinate system status.</p>
<div class="hcp4">
	<p class="hcp15"><img alt="CNC_CoordControl_020.jpg" id="image1" src="CNC_CoordControl_020.jpg" width="661" height="207" border="0"> 
	 </p>
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_asterisk2num">*1.<span class="hcp13">&#160;&#160;</span>Except 
 <span class="FM_italic">MovingOnHold</span>&#160;status and when G74, 
 G84, or M19 is executing. If <span class="FM_italic">Reset</span>&#160;is 
 TRUE when G74, G84, or M19 is completed, the program is reset at that 
 timing.</p>
<p class="FM_asterisk2numnext">*2.<span class="hcp13">&#160;&#160;</span>Program 
 abort refers to any one of the following states.</p>
<p class="FM_asterisk2numnext">&#160;<span class="FM_italic">FeedHold</span> 
 execution<sup>*3</sup></p>
<p class="FM_asterisk2numnext">&#160;M00 or M01 execution</p>
<p class="FM_asterisk2numnext">&#160;1-row execution completion by single 
 block</p>
<p class="FM_asterisk2numnext">&#160;Back trace completion</p>
<p class="FM_asterisk2numnext">*3.<span class="hcp13">&#160;&#160;</span>Except 
 when G74, G84, or M19 is executing. If <span class="FM_italic">FeedHold</span>&#160;(Feed 
 Hold) is TRUE when G74, G84, or M19 is completed, the program is set to 
 Feed Hold at that timing.</p>
<p class="FM_body1">&#160;</p>
<p class="FM_bul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 <span class="FM_italic">CycleStart</span>&#160;(Cycle Start) is TRUE while 
 <span class="FM_italic">Standby</span>&#160;and <span class="FM_italic">CycleStartReady</span>&#160;(Cycle 
 Start Ready) is TRUE, the status transitions to Executing, which starts 
 executing the NC program based on <span class="FM_italic">Pro­gramNo</span>&#160;(Program 
 Number). However, the transition is not performed when <span class="FM_italic">Reset</span>&#160;or 
 <span class="FM_italic">FeedHold</span>&#160;is TRUE.</p>
<p class="FM_bul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 Execute NC program is completed or <span class="FM_italic">Reset</span>&#160;is 
 changed to TRUE, the status transitions to <span class="FM_italic">Standby</span>.</p>
<p class="FM_bul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 <span class="FM_italic">FeedHold</span>&#160;(Feed Hold) is changed to 
 TRUE during the execution of NC program or when another program is interrupted 
 due to an event, the status transitions to <span class="FM_italic">Hold</span>.</p>
<p class="FM_bul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 the status is <span class="FM_italic">Hold</span>&#160;and <span class="FM_italic">ManualInterventionReady</span>&#160;(Manual 
 Intervention Ready) is TRUE, the manual intervention is available. Refer 
 to the explanation of <a href="#XREF_91813_l_Manual"><span class="FM_italic">Manual 
 Intervention</span></a>&#160;for details.</p>
<p class="FM_bul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 the <span class="FM_italic">Hold</span>&#160;and <span class="FM_italic">BackTraceReady</span>&#160;(Back 
 Trace Ready) is TRUE, <span class="FM_italic">BackTrace</span>&#160;is 
 available. Refer to the explanation of <a href="#XREF_54503_l_Back_trace_of_NC"><span 
	 class="FM_italic">Back Trace of NC Program</span></a> for details.</p>
<p class="FM_bul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 <span class="FM_italic">CycleStart</span>&#160;(Cycle Start) is TRUE while 
 the status is <span class="FM_italic">Hold</span>&#160;and <span class="FM_italic">CycleStartReady</span>&#160;(Cycle 
 Start Ready) is TRUE, the status transitions to <span class="FM_italic">Executing</span>&#160;again, 
 which restarts <span class="FM_italic">Execute</span> NC program.</p>
<p class="FM_bul1">&#160;</p>
<p class="FM_iconbody1" style="font-weight: bold; text-decoration: underline; ">Additional 
 Information</p>
<p class="FM_iconendline">&#160;</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 execution of NC Program is available when <span class="FM_italic">CycleStartReady</span>&#160;(Cycle 
 Start Ready) is TRUE. All the following conditions must be satisfied.</p>
<p class="FM_iconbul2" style="margin-left: 97.795pt;">a)<span class="hcp13">&#160;</span>All the positioning axes 
 and the spindle axis in the CNC coordinate system are set to Servo ON.</p>
<p class="FM_iconbul2" style="margin-left: 97.795pt;">b)<span class="hcp13">&#160;</span>All the positioning axes 
 in the CNC coordinate system have the home defined. (Excluding the spindle)</p>
<p class="FM_iconbul2" style="margin-left: 97.795pt;">c)<span class="hcp13">&#160;</span>The CNC coordinate system 
 is in <span class="FM_italic">Standby</span>&#160;or <span class="FM_italic">Hold</span>, 
 and axes other than the spindle axis are stopped.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 the status transitions to <span class="FM_italic">Executing</span>, operation 
 starts after in-position check was com­pleted.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 deceleration stop is set by <span class="FM_italic">FeedHold</span>, only 
 all the positioning axes in the CNC coordi­nate system decelerate to a 
 stop. If the multi-block acceleration/deceleration is disabled, deceleration 
 stop are performed based on the feed hold acceleration/deceleration time 
 of the CNC coordinate system parameter. If the multi-block acceleration/deceleration 
 is disabled, deceleration stop are performed based on the maximum acceleration/deceleration 
 rate of each CNC motor parameter.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 immediate stop is set by <span class="FM_italic">Reset</span>, only all 
 the positioning axes in the CNC coordinate system stop immediately. When 
 immediate stop is set by CNC_CoordStop or error detection, all the positioning 
 axes and spindle axis in the CNC coordinate system stop immediately.</p>
<p class="FM_iconbul1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Instruction Details</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Override</p>
<p class="FM_body5">This is a function to change the override of the feedrate 
 or spindle velocity in the execution of an NC program.</p>
<p class="FM_body5">Changing the override value changes the velocity during 
 the execution of an NC program.</p>
<p class="FM_body5">For feedrate override, the override change rate during 
 moving can be controlled by modifying the feedrate override change rate. 
 Setting the feedrate override change rate to a positive value changes 
 the override gradually to the target feedrate override value. Setting 
 the feedrate override change rate to 0 changes the override immediately 
 to the target override value.</p>
<p class="FM_body5">When the instruction is not operating at feedrate, 
 the override immediately changes to the target override value regardless 
 of the feedrate override change rate.</p>
<p class="FM_body5">&#160;</p>
<p class="FM_iconbody1" style="font-weight: bold; text-decoration: underline; ">Precautions 
 for Correct Use</p>
<p class="FM_iconendline">&#160;</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 feedrate override is an override value for the feed rate (F). Therefore, 
 for example, the feedrate override does not operate for the G code instructions 
 such as G00 that operates at a rapid feedrate.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>When 
 the feedrate override value is changed while the Multi-block Acceleration/Deceleration 
 is enabled (G500 is enabled), the changed value does not apply to the 
 operations that have been read ahead at the time of change. When the override 
 value is changed, the value applies to the operations that have not been 
 read ahead.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 override value is disabled for the tapping operation (G74, G84) and the 
 tapping opera­tion is performed at an override value of 100%.</p>
<p class="FM_iconbul1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><a 
	 name="XREF_91813_l_Manual"></a>Manual Intervention</p>
<p class="FM_body5">If <span class="FM_italic">FeedHold</span>&#160;changes 
 to TRUE during execution of an NC program, the NC program decelerates 
 to a stop. When the deceleration stop is completed, the status changes 
 to <span class="FM_italic">Hold</span>.</p>
<p class="FM_body5">In the <span class="FM_italic">Hold</span>&#160;status, 
 you can execute some of the other CNC instructions. This is called a manual 
 intervention.</p>
<p class="FM_body5">Refer to <span class="FM_italic">Instructions for Which 
 Multi-execution Is Supported</span>&#160;for the instructions that enable 
 the manual intervention.</p>
<p class="FM_body5">Manual intervention is a function used to temporarily 
 stop the NC program for troubleshooting pur­poses when machine troubles 
 occurred during the processing operation by NC program.</p>
<p class="FM_body5">Also, troubleshooting is performed, and continuation 
 is executed by <span class="FM_italic">CycleStart</span>. Continuation 
 refers to restarting the execution of the NC program after the CNC coordinate 
 system returned to the posi­tion at which the CNC coordinate system stopped 
 by <span class="FM_italic">FeedHold</span>.</p>
<p class="FM_body5">Executing continuation performs first to return to 
 the position at which the CNC coordinate system stopped by <span class="FM_italic">FeedHold</span>&#160;when 
 <span class="FM_italic">CycleStart</span>&#160;(Cycle Start) is changed 
 to TRUE after manual intervention was completed. It then restarts the 
 execution of the NC program. The return operation is performed independently 
 for each CNC motor, therefore, the tool is positioned in the CNC coordinate 
 system based on a non-linear interpolation manner. The maximum velocity 
 is applied to each CNC motor for the return operation.</p>
<div class="hcp4">
	<p class="hcp15"><img alt="CNC_CoordControl_030.jpg" id="image2" src="CNC_CoordControl_030.jpg" width="661" height="325" border="0"> 
	 </p>
</div>
<p class="FM_iconbody1" style="font-weight: bold; text-decoration: underline; "><span class="hcp14">Precautions 
 for Safe Use</span></p>
<p class="FM_iconendline">&#160;</p>
<p class="FM_iconbody1">Be sure to correctly perform manual intervention 
 depending on the working direction and work­piece shape. Otherwise, the 
 workpiece, machine, or tools may be damaged.</p>
<p class="FM_iconbody1">&#160;</p>
<div class="hcp4">
	<p class="hcp15"><img alt="CNC_CoordControl_040.jpg" id="image3" src="CNC_CoordControl_040.jpg" width="661" height="326" border="0"> 
	 </p>
</div>
<p class="FM_iconbody1" style="font-weight: bold;">&#160;</p>
<p class="FM_iconbody1" style="font-weight: bold; text-decoration: underline; "><span class="hcp14">Precautions 
 for Correct Use</span></p>
<p class="FM_iconendline">&#160;</p>
<p class="FM_iconbody1">To execute the manual intervention, all of the 
 following conditions must be satisfied.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 Multi-block Acceleration/Deceleration is enabled (G500 is enabled).</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 feed hold is stopped while G01, G02, or G03 is being executed.</p>
<p class="FM_iconbul1">Additionally, the above conditions are satisfied 
 when <span class="FM_italic">ManualInterventionReady</span>&#160;(Manual 
 Intervention Ready) of <span class="FM_italic">ControlOutputs</span>&#160;(Numerical 
 Control Outputs) is TRUE. The manual intervention program is interlocked 
 using <span class="FM_italic">ManualInterventionReady</span>&#160;(Manual 
 Intervention Ready). When the CNC instruction for the manual intervention 
 is started if <span class="FM_italic">ManualInterven­tionReady</span>&#160;(Manual 
 Intervention Ready) is FALSE, the CNC instruction changes to <span class="FM_italic">Com­mandAborted</span> 
 (Command Aborted).</p>
<p class="FM_iconbul1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><a 
	 name="XREF_54503_l_Back_trace_of_NC"></a>Back Trace of NC Program</p>
<p class="FM_body5">If <span class="FM_italic">FeedHold</span>&#160;changes 
 to TRUE during execution of an NC program, the NC program decelerates 
 to a stop. When the deceleration stop is completed, the status transitions 
 to the <span class="FM_italic">Hold</span> (Holding) status.</p>
<p class="FM_body5">If <span class="FM_italic">BackTrace</span>&#160;(Back 
 Trace) changes to TRUE and <span class="FM_italic">CycleStart</span>&#160;(Cycle 
 Start) changes from FALSE to TRUE in the <span class="FM_italic">Hold</span> 
 (Holding) status, the back trace can be executed. The back trace function 
 exe­cutes the NC program in backward direction from the stop position. 
 The status transitions to <span class="FM_italic">Execut­ing</span> while 
 the back trace is being executed.</p>
<p class="FM_body5">However, back trace cannot be executed for the G00 
 (Positioning) operation of the NC program. When the NC program contains 
 the G00 operation, it stops before the G00 operation.</p>
<p class="FM_body5">If the back trace is executed in a status in which 
 the operation is performed using an instruction that enables the manual 
 intervention after the <span class="FM_italic">Hold</span> (Holding) status, 
 the back trace execution is dis­abled.</p>
<p class="FM_body5"><span class="FM_italic">BackTrace</span>&#160;is available 
 only for operations of the positioning axis. It is not available for operations 
 of the spindle axis.</p>
<p class="FM_body5">The G or M code that is previous executed is not re-executed; 
 therefore, <span class="FM_italic">ModalStatus</span> holds the sta­tus 
 that is set at <span class="FM_italic">BackTrace</span> execution, and 
 read-ahead processing is stopped.</p>
<p class="FM_body5">However, only <span class="FM_italic">CurrentBlockNo</span> 
 is updated (rewound).</p>
<p class="FM_body5">When the NC program returns to the point at which <span 
	 class="FM_italic">BackTrace</span>&#160;was re-executed by <span class="FM_italic">CycleStart</span>&#160;after 
 <span class="FM_italic">BackTrace</span>&#160;was executed once, the update 
 of <span class="FM_italic">ModalStatus</span> restarts.</p>
<p class="FM_body5">&#160;</p>
<p class="FM_iconbody1" style="font-weight: bold; text-decoration: underline; "><span><span class="hcp14">Precautions 
 for Correct Use</span></span></p>
<p class="FM_iconendline">&#160;</p>
<p class="FM_iconbody1">To execute the backtrace, all of the following 
 conditions must be satisfied.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 Multi-block Acceleration/Deceleration is enabled (G500 is enabled).</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 feedhold is stopped while G01, G02, or G03 is being executed.</p>
<p class="FM_iconbul1"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 manual intervention is never executed in the <span class="FM_italic">Hold</span> 
 status.</p>
<p class="FM_iconbul1">Additionally, when <span class="FM_italic">BackTraceReady</span>&#160;(Back 
 Trace Ready) of <span class="FM_italic">ControlOutputs</span> (Numerical 
 Con­trol Outputs) is TRUE, the above conditions are satisfied. The back 
 trace execution program is interlocked using <span class="FM_italic">BackTraceReady</span>&#160;(Back 
 Trace Ready). If the back trace is executed when <span class="FM_italic">BackTraceReady</span> 
 (Back Trace Ready) is FALSE, the execution is disabled.</p>
<p class="FM_iconbul1">The execution of back trace is not applied to the 
 single block execution.</p>
<p class="FM_iconbul1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Test 
 of NC Program</p>
<p class="FM_body5">Created NC program may be checked whether it can operate 
 the machine as intended by executing the NC program before machining workpieces.</p>
<p class="FM_body5">You can check the program either by actually operating 
 the machine or, or by displaying the current position without operating 
 the machine.</p>
<p class="FM_body5">&#160;</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span>Dry 
 run</p>
<p class="FM_bul2">This is a test run to operate the machine with workpieces 
 removed to check tool operations.</p>
<p class="FM_bul2">The machine runs at the dry run velocity specified using 
 the relevant CNC coordinate system parameter regardless of the velocity 
 specified by the NC program.</p>
<p class="FM_bul2">If <span class="FM_italic">DryRun</span>&#160;(Dry Run 
 Enable) changes to TRUE when the execution of the NC program starts, the 
 dry run is executed.</p>
<p class="FM_body5">&#160;</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span>Machine 
 lock</p>
<p class="FM_bul2">This is a test run to check the changes shown on the 
 position indicator without operating the machine.</p>
<p class="FM_bul2">If <span class="FM_italic">MachineLock</span>&#160;(Machine 
 Lock Enable) changes to TRUE when the execution of the NC program starts, 
 the machine lock is executed. The NC program is executed as specified 
 and the position indicator changes, however, the axes do not move.</p>
<p class="FM_bul2">When the status transitions to the <span class="FM_italic">Standby</span> 
 status, the machine lock is released, and then the posi­tion indicator 
 returns to the machine position.</p>
<p class="FM_bul2"><span class="FM_italic">MachineLock</span>&#160;applies 
 to all of positioning axes and the spindle axis in the CNC coordinate 
 system. When the machine lock is specified while the spindle axis performs 
 the CW/CCW operation and the cycle start is executed, the spindle axis 
 status is maintained, but the output is cut (a speed of 0 is output). 
 Additionally, when the status of the CNC coordinate system transitions 
 from <span class="FM_italic">Execut­ing</span>&#160;to <span class="FM_italic">Standby</span>&#160;during 
 machine lock, the status of the spindle axis transitions to <span class="FM_italic">Standby</span>.</p>
<p class="FM_bul2">&#160;</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span>M 
 code lock</p>
<p class="FM_bul2">This function is used to lock M codes for test running.</p>
<p class="FM_bul2">If <span class="FM_italic">AuxiliaryLock</span>&#160;(M 
 Code Lock Valid) changes to TRUE when the execution of an NC program starts, 
 the M code lock is executed. The M code does not run.</p>
<p class="FM_body5">&#160;</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span>Optional 
 Input</p>
<p class="FM_bul2">This function outputs an optional input signal to the 
 NC program. This signal can be detected as an input signal in the NC program 
 by setting each bit of <span class="FM_italic">OptionalInputs</span> (Optional 
 Input) to TRUE.</p>
<p class="FM_bul2">Bit 0 of Optional Input is an input signal for Optional 
 Stop (M01) that stops the NC program by detecting the input signal.</p>
<p class="FM_bul2">Bits 1 to 31 of Optional Input are input signals for 
 a command (/N*) that skips one block of the NC program by detecting the 
 input signal.</p>
<p class="FM_bul2">* N is a constant between 1 to 31.</p>
<p class="FM_body5">&#160;</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span>Single 
 block</p>
<p class="FM_bul2">When the NC program is started while <span class="FM_italic">SingleBlock</span> 
 (Single Block) changes to TRUE, step execu­tion is performed. A row in 
 which a block number (N**) is not described is not recognized as one block 
 in the parsed NC program. The program is executed until the next block 
 number is found.</p>
<p class="FM_bul2">The NC program loaded from Sysmac Studio cannot be applied 
 to single block execution. How­ever, the single block execution of the 
 NC program loaded from Sysmac Studio can be performed by rewriting the 
 setting value of the single block execution option. To rewrite the setting 
 value of the single block execution option, use the CNC_Write instruction. 
 Specify _cncSingleBlockOption := 8 for <span class="FM_italic">ParameterNumber</span>&#160;(Parameter 
 Number) and set _cncSingleBlockOptionEnable := 1 to <span class="FM_italic">SettingValue</span> 
 (Setting Value).</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Modal 
 Status</p>
<p class="FM_body5">The valid modal status during execution of the NC program 
 is output to <span class="FM_italic">ModalStatus</span>&#160;(Modal Status) 
 of <span class="FM_italic">ControlOutputs</span>&#160;(Numerical Control 
 Outputs). <span class="FM_italic">ModalStatus</span>&#160;is maintained 
 even while <span class="FM_italic">Standby</span>&#160;is set by <span 
	 class="FM_italic">FeedHold</span>. <span class="FM_italic">ModalStatus</span> 
 is reset at the timing shown below.</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span><span 
	 class="FM_italic">Reset</span> (Reset) is executed.</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span><span 
	 class="FM_italic">CycleStart</span>&#160;is executed in the <span 
	 class="FM_italic">Standby</span> (Standby) status.</p>
<p class="FM_bul2"><span class="hcp13">&#160;&#160;&#160;&#160;</span>The 
 program that is currently executing changes to the end of program (M02/M30/M99).</p>
<p class="FM_bul2">&#160;</p>
<p class="FM_body5">When the program is stopped by CNC_CoordStop or CNC_ImmedieateStop 
 or when the program is stopped as an error is detected during operation, 
 <span class="FM_italic">ModalStatus</span> is not reset.</p>
<p class="FM_body5">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Timing Chart</p></td>
	</tr>
</table>

<p class="FM_body1">A timing chart for the operation of the CNC_CoordControl 
 instruction is shown below.</p>
<div class="hcp4">
	<p class="hcp15"><img alt="CNC_CoordControl_050.jpg" id="image4" src="CNC_CoordControl_050.jpg" width="661" height="215" border="0"> 
	 </p>
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body1">While <span class="hcp6">Enabled</span>&#160;is 
 TRUE, <span class="FM_italic">CoordControl</span> is updated.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Re-execution of CNC Instructions</p></td>
	</tr>
</table>

<p class="FM_body1">You cannot re-execute CNC instructions with enable-type 
 inputs.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Multi-execution of CNC Instructions</p></td>
	</tr>
</table>

<p class="FM_body1">Only one instance can enable this instruction in the 
 CNC coordinate system.</p>
<p class="FM_body1">When this instruction already has an instance enabled 
 in the CNC coordinate system, if an attempt is made to enable this instruction 
 of another instance in the same CNC coordinate system, the instruction 
 is enabled for the subsequent instance.</p>
<p class="FM_body1">Refer to <span class="FM_italic">Instructions for Which 
 Multi-execution Is Supported</span> for details on multi-exe­cution of 
 CNC instructions.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Error</p></td>
	</tr>
</table>

<p class="FM_body1">If this instruction cannot be executed, an error occurs, 
 and <span class="FM_italic">Error</span> will change to TRUE.</p>
<p class="FM_body1">You can find out the cause of the error by referring 
 to the value output by <span class="FM_italic">ErrorID</span> (Error Code).</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart When Error Occurs</p>
<div class="hcp4">
	<p class="hcp15"><img alt="CNC_CoordControl_060.jpg" id="image5" src="CNC_CoordControl_060.jpg" width="661" height="150" border="0"> 
	 </p>
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l</span><span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span>Error 
 Code</p>
<p class="FM_body5">Refer to <span class="FM_italic">Troubleshooting</span> 
 for errors that occur in instructions.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="661" class="hcp7">
	<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
		<td width="661" bgcolor="#B3B3B3" class="hcp8"><p class="FM_CRhead3">Sample Programming</p></td>
	</tr>
</table>

<p class="FM_body1">This section shows sample programming about the NC 
 program execution control method.</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Parameter Settings</p></td>
	</tr>
</table>

<p class="FM_body1">The minimum settings required for this sample programming 
 are given below.</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>CNC 
 Coordinate System Settings</p>
<p class="FM_body5">Logical CNC motor configuration</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="265" class="hcp11">
	<tr style="height: 25.00pt;" bgcolor="#B3B3B3">
		<th width="113" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">CNC 
		 coordinate system</p></th>
		<th width="151" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Logical CNC 
		 motor con­figuration</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC coordinate system 0</p></td>
		<td width="151" class="hcp5"><p class="FM_tablebody19pt">3</p></td>
	</tr>
</table>

<p class="FM_body5">&#160;</p>
<p class="FM_body5">Positioning axis configuration</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="529" class="hcp11">
	<tr style="height: 25.00pt;" bgcolor="#B3B3B3">
		<th width="113" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">CNC 
		 coordinate system</p></th>
		<th width="151" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Positioning 
		 axis CNC motor number</p></th>
		<th width="151" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Positioning 
		 axis config­uration CNC motor</p></th>
		<th width="113" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Positioning 
		 axis assignment</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC coordinate system 0</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC motor P0</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC motor 0</p></td>
		<td width="113" class="hcp5"><p class="FM_tablebody19pt">X-axis</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC coordinate system 0</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC motor P1</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC motor 1</p></td>
		<td width="113" class="hcp5"><p class="FM_tablebody19pt">Y-axis</p></td>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC coordinate system 0</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC motor P2</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC motor 2</p></td>
		<td width="113" class="hcp5"><p class="FM_tablebody19pt">Z-axis</p></td>
	</tr>
</table>

<p class="FM_body5">&#160;</p>
<p class="FM_body5">Spindle axis use CNC motor</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="265" class="hcp11">
	<tr style="height: 25.00pt;" bgcolor="#B3B3B3">
		<th width="113" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">CNC 
		 coordinate system</p></th>
		<th width="151" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Spindle axis 
		 use CNC motor</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC coordinate system 0</p></td>
		<td width="151" class="hcp5"><p class="FM_tablebody19pt">CNC 
		 motor 3</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Operation Example</p></td>
	</tr>
</table>

<p class="FM_body1">Use the CNC_CoordControl (CNC Coordinate System NC 
 Control) instruction to execute the following NC program that has been 
 loaded using the CNC_LoadProgramFile (Load NC Program) instruction.</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>NC 
 Program</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="340" class="hcp16">
	<tr style="height: 88.00pt;">
		<td width="340" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 File name: NCProg1.txt</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Program 
		 number: 300</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N00 G17 G91 
		 F500</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N10 G00 X10 
		 Y10</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N11 G01 X40</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N12 Y20</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N13 X-40</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N14 Y-20</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">N15 M30</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Operation 
 Pattern 1 (NC Program Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_070.jpg" id="image6" src="CNC_CoordControl_070.jpg" width="661" height="314" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_list1" style="font-weight: bold;"><span class="FM_list1num">1<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Operation Start Switch</span></p>
<p class="FM_listbody1">When you turn ON the operation start switch, CNC 
 coordinate system 0 operates in accordance with the NC program.</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Operation 
 Pattern 2 (Single Block Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_080.jpg" id="image7" src="CNC_CoordControl_080.jpg" width="661" height="204" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_list1" style="font-weight: bold;"><span class="FM_list1num">1<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Single Block Enable Switch</span></p>
<p class="FM_listbody1">Turn ON the single block enable switch.</p>
<p class="FM_list1next" style="font-weight: bold;"><span class="FM_list1num">2<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Operation Start Switch</span></p>
<p class="FM_listbody1">Every time you turn ON the operation start switch, 
 CNC coordinate system 0 operates block by block in accordance with the 
 NC program.</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Operation 
 Pattern 3 (Back Trace Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_090.jpg" id="image8" src="CNC_CoordControl_090.jpg" width="661" height="314" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_list1" style="font-weight: bold;"><span class="FM_list1num">1<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Operation Start Switch</span></p>
<p class="FM_listbody1">When you turn ON the operation start switch, CNC 
 coordinate system 0 operates in accordance with the NC program.</p>
<p class="FM_list1next" style="font-weight: bold;"><span class="FM_list1num">2<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Operation Interrupt Switch</span></p>
<p class="FM_listbody1">When you turn ON the operation interrupt switch, 
 the executing NC program pauses.</p>
<p class="FM_list1next" style="font-weight: bold;"><span class="FM_list1num">3<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Back Trace Enable Switch</span></p>
<p class="FM_listbody1">When you turn ON the operation start switch in 
 the back trace enable switch ON status, CNC coordinate system 0 rewinds 
 the NC program to run operations.</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Operation 
 Pattern 4 (Dry Run Execution)</p>
<p class="FM_list1" style="font-weight: bold;"><span class="FM_list1num">1<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Dry Run Enable Switch</span></p>
<p class="FM_listbody1">Turn ON the dry run enable switch.</p>
<p class="FM_list1next" style="font-weight: bold;"><span class="FM_list1num">2<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span><span 
	 class="FM_ArialBold">Turning ON the Operation Start Switch</span></p>
<p class="FM_listbody1">When you turn ON the operation start switch, the 
 machine lock and auxiliary function lock are enabled, and then CNC coordinate 
 system 0 runs the NC program in the dry run mode. At this time, the command 
 position moves, but the feedback position does not change from the machine 
 position. The velocity also becomes the dry run velocity and the auxiliary 
 function out­put does not operate.</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Ladder Diagram</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Main 
 Variables</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="113" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="151" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Default</p></th>
		<th width="265" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Comment</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC_Coord000</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC_COORD_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">CNC 
		 coordinate system variable of CNC coordi­nate system 0.</p></td>
	</tr>
	<tr style="height: 13.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC_Motor000</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC_MOTOR_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">CNC 
		 motor variable of CNC motor 0.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">StartPg</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the operation start switch.</p>
		<p class="FM_tablebody19pt">The Servo is turned ON when this variable 
		 is TRUE and EtherCAT process data communica­tions are established.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">Coord_Ready</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the execution ready completion in the NC program.</p>
		<p class="FM_tablebody19pt">TRUE when the NC program execution 
		 condi­tions are satisfied.</p></td>
	</tr>
	<tr style="height: 37.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">NcpStart</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">When 
		 this variable is TRUE and the cycle start ready is completed, 
		 the NC program is exe­cuted.</p></td>
	</tr>
	<tr style="height: 79.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">InitFlg</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the input parameter setting comple­tion.</p>
		<p class="FM_tablebody19pt">Input parameters are set when this 
		 variable is FALSE.</p>
		<p class="FM_tablebody19pt">When the input parameter setting is 
		 completed, this variable changes to TRUE.</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">InterruptSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the operation interrupt switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the execution 
		 of the NC program pauses.</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">SingleBlockSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the single block enable switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the single 
		 block execution is enabled.</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">BackTraceSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the back trace enable switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the back 
		 trace is enabled.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">DryRunSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the dry run enable switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the dry 
		 run, machine lock, and auxiliary function lock are enabled.</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 1 (NC Program Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_100.jpg" id="image9" src="CNC_CoordControl_100.jpg" width="661" height="400" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 2 (Single Block Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_110.jpg" id="image10" src="CNC_CoordControl_110.jpg" width="661" height="310" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">The details of the circle marked portions are shown 
 below.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_120.jpg" id="image11" src="CNC_CoordControl_120.jpg" width="661" height="108" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 3 (Back Trace Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_130.jpg" id="image12" src="CNC_CoordControl_130.jpg" width="661" height="334" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">The details of the circle marked portions are shown 
 below.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_140.jpg" id="image13" src="CNC_CoordControl_140.jpg" width="661" height="110" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 4 (Dry Run Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_150.jpg" id="image14" src="CNC_CoordControl_150.jpg" width="661" height="336" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Sample 
 Programming (NC Program Execution/Single Block Execution/Back Trace Execution)</p>
<p class="FM_body5">When contact <span class="FM_italic">StartPg</span> 
 is TRUE, the first pressing process of the operation start switch is executed.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_160.jpg" id="image15" src="CNC_CoordControl_160.jpg" width="661" height="60" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">StartPgWork</span> 
 is TRUE, check that an SD Memory Card is inserted.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_170.jpg" id="image16" src="CNC_CoordControl_170.jpg" width="661" height="106" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">After checking that an SD Memory Card is inserted, 
 start the Load NC Program to load the NC pro­gram.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_180.jpg" id="image17" src="CNC_CoordControl_180.jpg" width="661" height="132" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">If a monitoring information error occurs during loading 
 of the NC program, the error handler for the device (FaultHandler) is 
 executed.</p>
<p class="FM_body5">Program the FaultHandler according to the device.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_190.jpg" id="image18" src="CNC_CoordControl_190.jpg" width="661" height="68" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the Load NC Program is completed, check that the 
 Servo Drive is in the servo ready status and set the X-axis to the Servo 
 ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_200.jpg" id="image19" src="CNC_CoordControl_200.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the X-axis is in the Servo ON status, check that 
 the Servo Drive is in the servo ready status and set the Y-axis to the 
 Servo ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_210.jpg" id="image20" src="CNC_CoordControl_210.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the Y-axis is in the Servo ON status, check that 
 the Servo Drive is in the servo ready status and set the Z-axis to the 
 Servo ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_220.jpg" id="image21" src="CNC_CoordControl_220.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the Z-axis is in the Servo ON status, check that 
 the Servo Drive is in the servo ready status and set the spindle axis 
 to the Servo ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_230.jpg" id="image22" src="CNC_CoordControl_230.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the positioning axis and spindle axis are in the 
 Servo ON status, execute homing of the X-axis.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_240.jpg" id="image23" src="CNC_CoordControl_240.jpg" width="661" height="151" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">After the home of the X-axis is defined, execute homing 
 of the Y-axis.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_250.jpg" id="image24" src="CNC_CoordControl_250.jpg" width="661" height="151" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">After the home of the Y-axis is defined, execute homing 
 of the Z-axis.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_260.jpg" id="image25" src="CNC_CoordControl_260.jpg" width="661" height="151" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">If a minor fault level error occurs in CNC coordinate 
 system 0, the error handler for the device (FaultHandler) is executed.</p>
<p class="FM_body5">Program the FaultHandler according to the device.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_270.jpg" id="image26" src="CNC_CoordControl_270.jpg" width="661" height="76" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the NC program execution ready is completed, Coord_Ready 
 changes to TRUE.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_280.jpg" id="image27" src="CNC_CoordControl_280.jpg" width="661" height="98" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When Coord_Ready is TRUE, start the execution control 
 of the NC program.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_290.jpg" id="image28" src="CNC_CoordControl_290.jpg" width="661" height="166" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the execution control of the NC program is started, 
 set the parameters of the CNC_Coord­Control (CNC Coordinate System NC 
 Control) instruction.</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 156.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 CNC_CoordControl parameter</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Specify 
		 the NC program (No.300) that was loaded with the CNC_LoadProgramFile 
		 (Load NC Program) instruction.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.ProgramNo<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=UINT#300;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.FeedrateVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#300.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.SpindleVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#100.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.AuxiliaryLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.BackTrace<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.DryRun<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.FeedHold<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.MachineLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Change InitFlag 
		 to TRUE after setting the input parameters.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">InitFlg := 
		 TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Start the 
		 NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">NcpStart:=TRUE;</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">StartPg</span>&#160;is 
 TRUE, check that the cycle start ready is completed and start the execution 
 of the NC program.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_300.jpg" id="image29" src="CNC_CoordControl_300.jpg" width="661" height="287" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">InterruptSW</span> 
 is TRUE, stop the execution of the NC program.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_310.jpg" id="image30" src="CNC_CoordControl_310.jpg" width="661" height="132" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">BackTraceSW</span> 
 is TRUE, enable the back trace.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_320.jpg" id="image31" src="CNC_CoordControl_320.jpg" width="661" height="60" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">SingleBlockSW</span> 
 is TRUE, enable the single block execution.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_330.jpg" id="image32" src="CNC_CoordControl_330.jpg" width="661" height="60" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Sample 
 Programming (Dry Run Execution)</p>
<p class="FM_body5">When contact <span class="FM_italic">StartPg</span> 
 is TRUE, the first pressing process of the operation start switch is executed.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_340.jpg" id="image33" src="CNC_CoordControl_340.jpg" width="661" height="60" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">StartPgWork</span> 
 is TRUE, check that an SD Memory Card is inserted.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_350.jpg" id="image34" src="CNC_CoordControl_350.jpg" width="661" height="98" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">After checking that an SD Memory Card is inserted, 
 start the Load NC Program to load the NC pro­gram.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_360.jpg" id="image35" src="CNC_CoordControl_360.jpg" width="661" height="132" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">If a monitoring information error occurs during loading 
 of the NC program, the error handler for the device (FaultHandler) is 
 executed.</p>
<p class="FM_body5">Program the FaultHandler according to the device.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_370.jpg" id="image36" src="CNC_CoordControl_370.jpg" width="661" height="76" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the Load NC Program is completed, check that the 
 Servo Drive is in the servo ready status and set the X-axis to the Servo 
 ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_380.jpg" id="image37" src="CNC_CoordControl_380.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the X-axis is in the Servo ON status, check that 
 the Servo Drive is in the servo ready status and set the Y-axis to the 
 Servo ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_390.jpg" id="image38" src="CNC_CoordControl_390.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the Y-axis is in the Servo ON status, check that 
 the Servo Drive is in the servo ready status and set the Z-axis to the 
 Servo ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_400.jpg" id="image39" src="CNC_CoordControl_400.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the Z-axis is in the Servo ON status, check that 
 the Servo Drive is in the servo ready status and set the spindle axis 
 to the Servo ON status.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_410.jpg" id="image40" src="CNC_CoordControl_410.jpg" width="661" height="136" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">When the positioning axis and spindle axis are in the 
 Servo ON status, execute homing of the X-axis.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_420.jpg" id="image41" src="CNC_CoordControl_420.jpg" width="661" height="151" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">After the home of the X-axis is defined, execute homing 
 of the Y-axis.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_430.jpg" id="image42" src="CNC_CoordControl_430.jpg" width="661" height="151" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">After the home of the Y-axis is defined, execute homing 
 of the Z-axis.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_440.jpg" id="image43" src="CNC_CoordControl_440.jpg" width="661" height="151" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body5">If a minor fault level error occurs in CNC coordinate 
 system 0, the error handler for the device (FaultHandler) is executed.</p>
<p class="FM_body5">Program the FaultHandler according to the device.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_450.jpg" id="image44" src="CNC_CoordControl_450.jpg" width="661" height="76" border="0"> 
</div>
<p class="FM_body5" style="font-size: 2.0pt;">&#160;</p>
<p class="FM_body5">When the NC program execution ready is completed, <span 
	 class="FM_italic">Coord_Ready</span> changes to TRUE.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_460.jpg" id="image45" src="CNC_CoordControl_460.jpg" width="661" height="98" border="0"> 
</div>
<p class="FM_body5" style="font-size: 2.0pt;">&#160;</p>
<p class="FM_body5">When <span class="FM_italic">Coord_Ready</span> is 
 TRUE, start the execution control of the NC program.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_470.jpg" id="image46" src="CNC_CoordControl_470.jpg" width="661" height="166" border="0"> 
</div>
<p class="FM_body5" style="font-size: 2.0pt;">&#160;</p>
<p class="FM_body5">When the execution control of the NC program is started, 
 set the parameters of the CNC_Coord­Control (CNC Coordinate System NC 
 Control) instruction.</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 156.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 CNC_CoordControl parameter</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Specify 
		 the NC program (No.300) that was loaded with the CNC_LoadProgram-</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">File (Load 
		 NC Program) instruction.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.ProgramNo<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=UINT#300;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.FeedrateVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#300.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.SpindleVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#100.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.AuxiliaryLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.BackTrace<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.DryRun<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.FeedHold<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ControlInputs.MachineLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Change InitFlag 
		 to TRUE after setting the input parameters.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">InitFlg := 
		 TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Start the 
		 NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">NcpStart:=TRUE;</p></td>
	</tr>
</table>

<p class="FM_body1">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">StartPg</span>&#160;is 
 TRUE, check that the cycle start ready is completed and start the execution 
 of the NC program.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_480.jpg" id="image47" src="CNC_CoordControl_480.jpg" width="661" height="287" border="0"> 
</div>
<p class="FM_body5" style="font-size: 2.0pt;">&#160;</p>
<p class="FM_body5">When contact <span class="FM_italic">DryRunSW</span> 
 is TRUE, enable the dry run, machine lock, and auxiliary function lock.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_490.jpg" id="image48" src="CNC_CoordControl_490.jpg" width="661" height="132" border="0"> 
</div>
<p class="FM_body5" style="font-size: 2.0pt;">&#160;</p>

<table cellspacing="0" width="620" class="hcp9">
	<tr style="height: 21.00pt;">
		<td width="620" class="hcp10"><p 
			 class="FM_head4">Structured Text (ST)</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Main 
 Variables</p>

<table cellspacing="0" width="605" class="hcp11">
	<tr style="height: 13.00pt;" bgcolor="#B3B3B3">
		<th width="113" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Name</p></th>
		<th width="151" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Data 
		 type</p></th>
		<th width="76" bgcolor="#B3B3B3" class="hcp1"><p class="FM_tabletitlec9pt">Default</p></th>
		<th width="265" bgcolor="#B3B3B3" class="hcp2"><p class="FM_tabletitlec9pt">Comment</p></th>
	</tr>
	<tr style="height: 25.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC_Coord000</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC_COORD_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">CNC 
		 coordinate system variable of CNC coordi­nate system 0.</p></td>
	</tr>
	<tr style="height: 13.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">CNC_Motor000</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">_sCNC_MOTOR_REF</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">---</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">CNC 
		 motor variable of CNC motor 0.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">StartPg</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the operation start switch.</p>
		<p class="FM_tablebody19pt">The Servo is turned ON when this variable 
		 is TRUE and EtherCAT process data communica­tions are established.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">Coord_Ready</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the execution ready completion the NC program.</p>
		<p class="FM_tablebody19pt">TRUE when the NC program execution 
		 condi­tions are satisfied.</p></td>
	</tr>
	<tr style="height: 37.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">NcpStart</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">When 
		 this variable is TRUE and the cycle start ready is completed, 
		 the NC program is exe­cuted.</p></td>
	</tr>
	<tr style="height: 79.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">InitFlg</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the input parameter setting comple­tion.</p>
		<p class="FM_tablebody19pt">Input parameters are set when this 
		 variable is FALSE.</p>
		<p class="FM_tablebody19pt">When the input parameter setting is 
		 completed, this variable changes to TRUE.</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">InterruptSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the operation interrupt switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the execution 
		 of the NC program pauses.</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">SingleBlockSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the single block enable switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the single 
		 block execution is enabled.</p></td>
	</tr>
	<tr style="height: 40.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">BackTraceSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the back trace enable switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the back 
		 trace is enabled.</p></td>
	</tr>
	<tr style="height: 52.00pt;">
		<td width="113" class="hcp3"><p 
			 class="FM_tablebody19pt">DryRunSW</p></td>
		<td width="151" class="hcp3"><p 
			 class="FM_tablebody19pt">BOOL</p></td>
		<td width="76" class="hcp3"><p 
			 class="FM_tablebody19pt">FALSE</p></td>
		<td width="265" class="hcp5"><p class="FM_tablebody19pt">Indicates 
		 the dry run enable switch.</p>
		<p class="FM_tablebody19pt">When this variable is TRUE, the dry 
		 run, machine lock, and auxiliary function lock are enabled.</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 1 (NC Program Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_500.jpg" id="image49" src="CNC_CoordControl_500.jpg" width="661" height="398" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 2 (Single Block Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_510.jpg" id="image50" src="CNC_CoordControl_510.jpg" width="661" height="340" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_body1">The details of the circle marked portions are shown 
 below.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_520.jpg" id="image51" src="CNC_CoordControl_520.jpg" width="661" height="110" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 3 (Back Trace Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_530.jpg" id="image52" src="CNC_CoordControl_530.jpg" width="661" height="340" border="0"> 
</div>
<p class="FM_body1" style="font-size: 2.0pt;">&#160;</p>
<p class="FM_body1">The details of the circle marked portions are shown 
 below.</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_540.jpg" id="image53" src="CNC_CoordControl_540.jpg" width="661" height="114" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Timing 
 Chart 4 (Dry Run Execution)</p>
<div class="hcp18">
	<img alt="CNC_CoordControl_550.jpg" id="image54" src="CNC_CoordControl_550.jpg" width="661" height="366" border="0"> 
</div>
<p class="FM_body1">&#160;</p>
<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Sample 
 Programming (NC Program Execution/Single Block Execution/Back Trace Execution)</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 431.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 When StartPg is TRUE, execute the first pressing process of the 
		 operation start switch.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (StartPg 
		 = TRUE) AND (StartPgWork=FALSE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>StartPgWork:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When StartPgWork 
		 is TRUE, check that an SD Memory Card is inserted.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (StartPgWork 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>IF ( _Card1Access=FALSE 
		 ) AND ( _Card1Ready =TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>LPF_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// If a monitoring 
		 information error occurs during loading of the NC program, exe­cute 
		 the error handler for the device (FaultHandler).</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Program 
		 the FaultHandler according to the device.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (_CNC_COM.Obsr.Active=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>FaultHandler();</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 Load NC Program is completed, check that the Servo Drive is in 
		 the servo ready status and set the X-axis to the ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (LPF_Dn 
		 = TRUE) AND (CNC_Motor000.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>Pwr1_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>Pwr1_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 X-axis is in the Servo ON status, check that the Servo Drive is 
		 in the servo ready status and set the Y-axis to the Servo ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr1_Status 
		 = TRUE) AND (CNC_Motor001.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr2_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr2_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 Y-axis is in the Servo ON status, check that the Servo Drive is 
		 in the servo ready status and set the Z-axis to the Servo ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr2_Status 
		 = TRUE) AND (CNC_Motor002.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr3_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr3_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 Z-axis is in the Servo ON status, check that the Servo Drive is 
		 in the servo ready status and set the spindle axis to the Servo 
		 ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr3_Status 
		 = TRUE) AND (CNC_Motor003.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr4_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr4_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 505.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 When the positioning axis and spindle axis are in the Servo ON 
		 status, execute homing of the X-axis.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr4_Status=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Hm1_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// After the 
		 home of the X-axis is defined, execute homing of the Y-axis.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr2_Status=TRUE) 
		 AND (Hm1_D=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Hm2_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// After the 
		 home of the Y-axis is defined, execute homing of the Z-axis.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr3_Status=TRUE) 
		 AND (Hm2_D=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Hm3_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// If a minor 
		 fault level error occurs in coordinate system 0, execute the error 
		 handler for the device (FaultHandler).</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Program 
		 the FaultHandler according to the device.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (CNC_Coord000.MFaultLvl.Active=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>FaultHandler();</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 NC program execution ready is completed, Coord_Ready changes to 
		 TRUE.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Hm3_D =TRUE) 
		 AND (CNC_Coord000.Status.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord_Ready :=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSIF(CC1_Err 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord_Ready :=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When Coord_Ready 
		 is TRUE, start the execution control of the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Coord_Ready=TRUE)THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Processing 
		 when input parameters are not set</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF(CC1_enbd= 
		 TRUE)AND( InitFlg=FALSE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// CNC_CoordControl 
		 parameter</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Specify the NC 
		 program (No.300) that was loaded with the CNC_LoadPro­gramFile 
		 (Load NC Program) instruction.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.ProgramNo<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=UINT#300;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.FeedrateVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#300.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.SpindleVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#100.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.AuxiliaryLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.BackTrace<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.DryRun<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.FeedHold<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.MachineLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Change InitFlag 
		 to TRUE after setting the input parameters.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>InitFlg := TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Start the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>NcpStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 451.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 Check that the cycle start ready is completed and start the execution 
		 of the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (InitFlg=TRUE) 
		 AND (ControlOutputs.CycleStartReady=TRUE) AND (NcpStart=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_CycleStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF( CC1_CycleStart 
		 =TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.CycleStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 NC program is executed, CC1_CycleStart and NcpStart change to 
		 FALSE.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (ControlOutputs.ExecutingStatus 
		 = _eCNC_EXECUTING_STATE#_cncExecuting) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>NcpStart:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_CycleStart:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.CycleStart:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Pressing 
		 the operation start switch again re-executes the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (StartPg 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>StartPg := FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>IF (StartPgWork = 
		 TRUE) AND (InitFlg=TRUE)THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>NcpStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When InterruptSW 
		 is TRUE, the execution of the NC program pauses.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (InterruptSW 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.FeedHold 
		 :=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Check that the 
		 NC program stops and set the FeedHold flag to OFF.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>IF (ControlOutputs.ExecutingStatus= 
		 _eCNC_EXECUTING_STATE#_cncHold)THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.FeedHold 
		 :=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>InterruptSW:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When BackTraceSW 
		 is TRUE, determine whether the back trace can be used. When the 
		 back trace can be used, enable the back trace.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (BackTraceSW 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>IF (ControlOutputs.BackTraceReady=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.BackTrace:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE<span class="hcp19">&#160;&#160;&#160;</span></p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.BackTrace:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When SingleBlockSW 
		 is TRUE, enable the single block execution.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (SingleBlockSW 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.SingleBlock:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE<span class="hcp19">&#160;&#160;&#160;</span></p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.SingleBlock:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 420.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 CNC_Power of X-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR1(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr1_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#0, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr1_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr1_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr1_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr1_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Power 
		 of Y-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR2(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr2_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#1, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr2_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr2_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr2_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr2_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Power 
		 of Z-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR3(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr3_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#2, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr3_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr3_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr3_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr3_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Power 
		 of spindle axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR4(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr4_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#100, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr4_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr4_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr4_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr4_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Home 
		 of X-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">HM1(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Coord 
		 := CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Execute 
		 := Hm1_Ex,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;LogicalMotorNo 
		 :=UINT#0,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Done 
		 =&gt; Hm1_D,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Busy 
		 =&gt; Hm1_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;CommandAborted=&gt; 
		 Hm1_Ca,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Error 
		 =&gt; Hm1_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;ErrorID 
		 =&gt; Hm1_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 415.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 CNC_Home of Y-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">HM2(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Coord 
		 := CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Execute 
		 := Hm2_Ex,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;LogicalMotorNo 
		 :=UINT#1,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Done 
		 =&gt; Hm2_D,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Busy 
		 =&gt; Hm2_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;CommandAborted=&gt; 
		 Hm2_Ca,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Error 
		 =&gt; Hm2_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;ErrorID 
		 =&gt; Hm2_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Home 
		 of Z-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">HM3(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Coord 
		 := CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Execute 
		 := Hm3_Ex,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;LogicalMotorNo 
		 :=UINT#2,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Done 
		 =&gt; Hm3_D,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Busy 
		 =&gt; Hm3_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;CommandAborted=&gt; 
		 Hm3_Ca,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Error 
		 =&gt; Hm3_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;ErrorID 
		 =&gt; Hm3_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">//<span class="hcp19">&#160;&#160;&#160;</span>CNC_CoordControl</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">CC1(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs:=ControlInputs,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlOutputs:=ControlOutputs, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=CC1_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enabled=&gt;CC1_enbd, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy=&gt;CC1_Bsy, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Error=&gt;CC1_Err, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ErrorID=&gt;CC1_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_LoadProgramFile</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">LPF(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Execute:=LPF_Ex, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>FileName:=STRING#'NCProg1.txt', 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>DeletePrg:=_eCNC_DELETE_PRG#_cncNotDelPrg, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Done=&gt;LPF_D, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy=&gt;LPF_Bsy, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CommandAborted=&gt;LPF_Ca, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Error=&gt;LPF_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ErrorID=&gt;LPF_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p></td>
	</tr>
</table>

<p class="FM_head5"><span class="FM_Wingdings">l<span class="hcp13">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</span></span>Sample 
 Programming (Dry Run Execution)</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 507.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 When StartPg is TRUE, execute the first pressing process of the 
		 operation start switch.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (StartPg 
		 = TRUE) AND (StartPgWork=FALSE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>StartPgWork:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When StartPgWork 
		 is TRUE, check that an SD Memory Card is inserted.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (StartPgWork 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>IF ( _Card1Access=FALSE 
		 ) AND ( _Card1Ready =TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>LPF_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// If a monitoring 
		 information error occurs during loading of the NC program, exe­cute 
		 the error handler for the device (FaultHandler).</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Program 
		 the FaultHandler according to the device.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (_CNC_COM.Obsr.Active=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>FaultHandler();</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 Load NC Program is completed, check that the Servo Drive is in 
		 the servo ready status and set the X-axis to the ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (LPF_Dn 
		 = TRUE) AND (CNC_Motor000.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>Pwr1_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>Pwr1_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 X-axis is in the Servo ON status, check that the Servo Drive is 
		 in the servo ready status and set the Y-axis to the Servo ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr1_Status 
		 = TRUE) AND (CNC_Motor001.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr2_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr2_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 Y-axis is in the Servo ON status, check that the Servo Drive is 
		 in the servo ready status and set the Z-axis to the Servo ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr2_Status 
		 = TRUE) AND (CNC_Motor002.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr3_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr3_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 Z-axis is in the Servo ON status, check that the Servo Drive is 
		 in the servo ready status and set the spindle axis to the Servo 
		 ON status.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr3_Status 
		 = TRUE) AND (CNC_Motor003.DrvStatus.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr4_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Pwr4_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 positioning axis and spindle axis are in the Servo ON status, 
		 execute homing of the X-axis.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr4_Status=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;<span class="hcp19">&#160;&#160;&#160;</span>Hm1_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 529.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 After the home of the X-axis is defined, execute homing of the 
		 Y-axis.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr2_Status=TRUE) 
		 AND (Hm1_D=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Hm2_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// After the 
		 home of the Y-axis is defined, execute homing of the Z-axis.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Pwr3_Status=TRUE) 
		 AND (Hm2_D=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Hm3_Ex:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// If a minor 
		 fault level error occurs in coordinate system 0, execute the error 
		 handler for the device (FaultHandler).</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Program 
		 the FaultHandler according to the device.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (CNC_Coord000.MFaultLvl.Active=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>FaultHandler();</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When the 
		 NC program execution ready is completed, Coord_Ready changes to 
		 TRUE.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Hm3_D =TRUE) 
		 AND (CNC_Coord000.Status.Ready=TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord_Ready :=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSIF(CC1_Err 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord_Ready :=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When Coord_Ready 
		 is TRUE, start the execution control of the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (Coord_Ready=TRUE)THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_En:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_En:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Processing 
		 when input parameters are not set</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF(CC1_enbd= 
		 TRUE)AND( InitFlg=FALSE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// CNC_CoordControl 
		 parameter</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Specify the NC 
		 program (No.300) that was loaded with the CNC_LoadPro­gramFile 
		 (Load NC Program) instruction.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.ProgramNo<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=UINT#300;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.FeedrateVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#300.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.SpindleVelFactor<span class="hcp19">&#160;&#160;&#160;</span>:=LREAL#100.0;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.AuxiliaryLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.BackTrace<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.DryRun<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.FeedHold<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.MachineLock<span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Change InitFlag 
		 to TRUE after setting the input parameters.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>InitFlg := TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>// Start the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>NcpStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Check that 
		 the cycle start ready is completed and start the execution of 
		 the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (InitFlg=TRUE) 
		 AND (ControlOutputs.CycleStartReady=TRUE) AND (NcpStart=TRUE) 
		 THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_CycleStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF( CC1_CycleStart 
		 =TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.CycleStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 506.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 When the NC program is executed, CC1_CycleStart and NcpStart change 
		 to FALSE.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (ControlOutputs.ExecutingStatus 
		 = _eCNC_EXECUTING_STATE#_cncExecuting) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>NcpStart:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CC1_CycleStart:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.CycleStart:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// Pressing 
		 the operation start switch again re-executes the NC program.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (StartPg 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>StartPg := FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>IF (StartPgWork = 
		 TRUE) AND (InitFlg=TRUE)THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span><span class="hcp19">&#160;&#160;&#160;</span>NcpStart:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// When DryRunSW 
		 is TRUE, enable the dry run, machine lock, and auxiliary function 
		 lock.</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">IF (DryRunSW 
		 = TRUE) THEN</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.DryRun:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.MachineLock:=TRUE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.AuxiliaryLock:=TRUE;<span class="hcp19">&#160;&#160;&#160;</span></p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">ELSE<span class="hcp19">&#160;&#160;&#160;</span></p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.DryRun:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.MachineLock:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs.AuxiliaryLock:=FALSE;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">END_IF;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Power 
		 of X-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR1(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr1_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#0, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr1_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr1_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr1_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr1_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Power 
		 of Y-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR2(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr2_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#1, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr2_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr2_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr2_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr2_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Power 
		 of Z-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR3(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr3_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#2, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr3_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr3_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr3_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr3_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 505.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 CNC_Power of spindle axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">PWR4(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=Pwr4_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>LogicalMotorNo:=UINT#100, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Status=&gt;Pwr4_Status,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy =&gt; Pwr4_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;Error 
		 =&gt; Pwr4_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;&#160;&#160;ErrorID 
		 =&gt; Pwr4_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Home 
		 of X-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">HM1(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Coord 
		 := CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Execute 
		 := Hm1_Ex,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;LogicalMotorNo 
		 :=UINT#0,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Done 
		 =&gt; Hm1_D,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Busy 
		 =&gt; Hm1_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;CommandAborted=&gt; 
		 Hm1_Ca,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Error 
		 =&gt; Hm1_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;ErrorID 
		 =&gt; Hm1_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Home 
		 of Y-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">HM2(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Coord 
		 := CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Execute 
		 := Hm2_Ex,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;LogicalMotorNo 
		 :=UINT#1,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Done 
		 =&gt; Hm2_D,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Busy 
		 =&gt; Hm2_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;CommandAborted=&gt; 
		 Hm2_Ca,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Error 
		 =&gt; Hm2_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;ErrorID 
		 =&gt; Hm2_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">// CNC_Home 
		 of Z-axis</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">HM3(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Coord 
		 := CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Execute 
		 := Hm3_Ex,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;LogicalMotorNo 
		 :=UINT#2,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Done 
		 =&gt; Hm3_D,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Busy 
		 =&gt; Hm3_Bsy,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;CommandAborted=&gt; 
		 Hm3_Ca,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;Error 
		 =&gt; Hm3_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;ErrorID 
		 =&gt; Hm3_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">//<span class="hcp19">&#160;&#160;&#160;</span>CNC_CoordControl</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">CC1(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Coord:= CNC_Coord000,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlInputs:=ControlInputs,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ControlOutputs:=ControlOutputs, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enable:=CC1_En, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Enabled=&gt;CC1_enbd, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy=&gt;CC1_Bsy, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Error=&gt;CC1_Err, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ErrorID=&gt;CC1_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">&#160;</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>
<p class="FM_tablespec">&#160;</p>

<table cellspacing="0" width="605" class="hcp16">
	<tr style="height: 50.00pt;">
		<td width="605" class="hcp17"><p class="FM_body1ST" style="text-indent: 0.000pt;">// 
		 CNC_LoadProgramFile</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">LPF(</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Execute:=LPF_Ex, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>FileName:=STRING#'NCProg1.txt', 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>DeletePrg:=_eCNC_DELETE_PRG#_cncNotDelPrg, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Done=&gt;LPF_D, </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Busy=&gt;LPF_Bsy, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>CommandAborted=&gt;LPF_Ca, 
		 </p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>Error=&gt;LPF_Err,</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;"><span class="hcp19">&#160;&#160;&#160;</span>ErrorID=&gt;LPF_ErrID</p>
		<p class="FM_body1ST" style="text-indent: 0.000pt;">);</p></td>
	</tr>
</table>

<p class="FM_tablespec">&#160;</p>
<p class="FM_body1ST">&#160;</p>
</body>
</html>
