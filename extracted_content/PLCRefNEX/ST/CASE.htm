
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">



 <meta name="generator" content="Adobe RoboHelp 11">
<title>CASE</title>
<link rel="stylesheet" href="ST.css" type="text/css">
<style title="hcp" type="text/css">
<!--
td.hcp1 { border-top:solid 1px #000000;
border-right:solid 1px #000000;
border-bottom:solid 1px #000000; }
td.hcp2 { border-top:solid 1px #000000;
border-bottom:solid 1px #000000; }
td.hcp3 { border-right:solid 1px #000000;
border-bottom:solid 1px #000000; }
td.hcp4 { border-bottom:solid 1px #000000; }
span.hcp5 { font-style:italic; }
span.hcp6 { font-family:Times New Roman;
font-size:7.0pt; }
span.hcp7 { font-family:Times New Roman;
font-size:10.0pt; }
table.hcp8 { padding-top:5.00pt;
padding-right:4.00pt;
padding-bottom:1.00pt; }
table.hcp9 { padding-left:4.00pt;
padding-top:4.00pt;
padding-right:4.00pt;
padding-bottom:2.00pt;
margin-left:42.52pt; }
-->
</style>
</head>
<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

<p class="Title">CASE</p>
<p class="FM_body1">You use the CASE construct to select the statement to execute based on the value of a specified inte­ger expression.</p>

<table style="padding-left: 4.00pt; padding-top: 4.00pt; padding-right: 4.00pt; padding-bottom: 2.00pt;" cellspacing="0" width="662">
<tr style="height: 15.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="117" class="hcp1">
<p class="FM_tabletitlec9pt">Instruction</p>
</td>
<td bgcolor="#B3B3B3" width="117" class="hcp1">
<p class="FM_tabletitlec9pt">Name</p>
</td>
<td bgcolor="#B3B3B3" width="103" class="hcp1">
<p class="FM_tabletitlec9pt">FB/FUN</p>
</td>
<td bgcolor="#B3B3B3" width="164" class="hcp1">
<p class="FM_tabletitlec9pt">Graphic expression</p>
</td>
<td bgcolor="#B3B3B3" width="161" class="hcp2">
<p class="FM_tabletitlec9pt">ST expression</p>
</td>
</tr>
<tr style="height: 133.00pt;">
<td width="117" class="hcp3">
<p class="FM_tablebody19pt">CASE</p>
</td>
<td width="117" class="hcp3">
<p class="FM_tablebody19pt">Case</p>
</td>
<td width="103" class="hcp3">
<p class="FM_tablebody19pt">---</p>
</td>
<td width="164" class="hcp3">
<p class="FM_tablebody19pt">None</p>
</td>
<td width="161" class="hcp4">
<p class="FM_GCCommandTable">CASE <span class="hcp5">integer expression</span> OF</p>
<p class="FM_GCCommandTable"><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">value</span>:</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span><span class="hcp7">&#160;&#160;&#160;</span><span class="hcp5">statement</span>;</p>
<p class="FM_GCCommandTable"><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">value</span>:</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span><span class="hcp7">&#160;&#160;&#160;</span><span class="hcp5">statement</span>;</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span>·</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span>·</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span>·</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span>ELSE</p>
<p class="FM_GCCommandTable"><span class="hcp7">&#160;&#160;&#160;</span><span class="hcp7">&#160;&#160;&#160;</span><span class="hcp5">statement</span>;</p>
<p class="FM_GCCommandTable">END_CASE;</p>
</td>
</tr>
</table>

<p class="FM_CRhead3">&#160;</p>

<table cellspacing="0" width="661" class="hcp8">
<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="661">
<p class="FM_CRhead3">Variables</p>
</td>
</tr>
</table>

<p class="FM_body1">None</p>
<p class="FM_body1">&#160;</p>

<table cellspacing="0" width="661" class="hcp8">
<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="661">
<p class="FM_CRhead3">Function</p>
</td>
</tr>
</table>

<p class="FM_body1">You use the CASE construct to select the statement to execute based on the value of a specified integer expression.</p>
<p class="FM_body1">You can use any of the following as the integer expression and values.</p>

<table style="padding-left: 4.00pt; padding-top: 4.00pt; padding-right: 4.00pt; padding-bottom: 2.00pt; margin-left: 42.52pt; left: 0px; top: 485px;" cellspacing="0" width="484">
<col width="124">
<col width="354">
<tr style="height: 20px;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="124" class="hcp1">
<p class="FM_tabletitlelc9pt">&#160;</p>
</td>
<td bgcolor="#B3B3B3" width="354" class="hcp2">
<p class="FM_tabletitlelc9pt">Allowed notation</p>
</td>
</tr>
<tr style="height: 40px;">
<td width="124" class="hcp3">
<p class="FM_tablebody19pt">Integer expression</p>
</td>
<td width="354" class="hcp4">
<p class="FM_tablebody19pt">Integer variable, integer constant, integer expression, or a function that returns an integer return value, enumeration variable, enumeration expression, or enumerator</p>
</td>
</tr>
<tr style="height: 22px;">
<td width="124" class="hcp3">
<p class="FM_tablebody19pt">Values</p>
</td>
<td width="354" class="hcp4">
<p class="FM_tablebody19pt">Integer constants</p>
</td>
</tr>
</table>

<p class="FM_body1">The flowchart in the following example shows the processing flow for an integer expression. You can use more than one statement for each of the statements.</p>
<p class="FM_GCCommandbody" style="margin-bottom: 0.000pt;">CASE <span class="hcp5">integer expression</span> OF<span class="hcp6"><br>
&#160;&#160;&#160;</span>1 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 1</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>2 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 2</span>;</p>
<p class="FM_GCCommandbody" style="margin-top: 0.000pt; margin-bottom: 0.000pt;"><span class="hcp6">&#160;&#160;&#160;</span>.<span class="hcp6"><br>
&#160;&#160;&#160;</span>.<span class="hcp6"><br>
&#160;&#160;&#160;</span>.</p>
<p class="FM_GCCommandbody"><span class="hcp6">&#160;&#160;&#160;</span>n :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement n;</span><span class="hcp6"><br>
&#160;&#160;&#160;</span>ELSE<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement m;</span><br>
END_CASE;</p>
<p class="FM_figbody1"><img id="3" src="CASE-01.gif" alt="" width="387" height="351" border="0" name="3">&#160;</p>

<table cellspacing="0" width="661" class="hcp8">
<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="661">
<p class="FM_CRhead3">Additional Information</p>
</td>
</tr>
</table>

<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>You can use the CASE construct to build a hierarchy. The following example executes statement 12 if the value of integer expression 1 is 1 and the value of integer expression 11 is 2.</p>
<p class="FM_GCCommandbody">CASE <span class="hcp5">integer expression 1</span> OF<span class="hcp6"><br>
&#160;&#160;&#160;</span>1 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span>CASE <span class="hcp5">integer expression 1</span> OF<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span>1 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 11</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span>2 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 12</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span>ELSE<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 1m</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span>END_CASE;<span class="hcp6"><br>
&#160;&#160;&#160;</span>2 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 2</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>3 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 3</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>ELSE<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement m</span>;<br>
END_CASE;</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>You can use more than one value at the same time. Separate values with commas. The following example executes statement 1 if the value of the integer expression is either 1 or 2.</p>
<p class="FM_GCCommandbody">CASE <span class="hcp5">integer expression 1</span> OF<span class="hcp6"><br>
&#160;&#160;&#160;</span>1,2 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 1</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>3 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 2</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>4 :<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 3</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>ELSE<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement m</span>;<br>
END_CASE;</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>You can use a range of consecutive values. Place two periods between the numbers to indicate consecutive values. The following example executes statement 1 if the value of the integer expression is between 10 and 15, inclusive.</p>
<p class="FM_GCCommandbody">CASE <span class="hcp5">integer expression 1</span> OF<span class="hcp6"><br>
&#160;&#160;&#160;</span>10..15:<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 1</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>16:<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 2</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>17:<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement 3</span>;<span class="hcp6"><br>
&#160;&#160;&#160;</span>ELSE<span class="hcp6"><br>
&#160;&#160;&#160;</span><span class="hcp6">&#160;&#160;&#160;</span><span class="hcp5">statement m</span>;<br>
END_CASE;</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>You can omit ELSE. If you do, none of the statements is executed if none of the values is equal to the value of the integer expression.</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>There are no restrictions on the statements that you can use. You can use the same types of state­ments for the statements in the CASE construct as you do for the statements outside the CASE con­struct. For example, you can use function block calls and FOR constructs.</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>The following is different in comparison to a C language switch statement. With a C language switch statement, all statements after a value that equals the integer expression are executed unless a break statement is used. With the CASE statement, only the statements that correspond directly to the value that equals the integer expression are executed. For example, in the following example, statements 1 to 3 are executed for the C language switch statement. Here, only statement 1 is executed for the CASE instruction.</p>
<p class="FM_bul1">&#160;</p>
<p class="FM_bul1"><img src="CASE-02.gif" id="img1" alt="" width="286" height="146" border="0" name="img1"></p>
<p class="FM_bul1">&#160;</p>

<table cellspacing="0" width="661" class="hcp8">
<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="661">
<p class="FM_CRhead3">Precautions for Correct Use</p>
</td>
</tr>
</table>

<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>You must always use CASE and END_CASE. They must be paired.</p>
<p class="FM_bul1"><span class="FM_Helvetica"><span class="FM_Helvetica">•</span></span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>The data types of the integer expression and values can be different.</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>Each value can be given only once.</p>
<p class="FM_bul1"><span class="FM_Helvetica">•</span><span class="FM_Helvetica" style="font-family: 'Times New Roman'; font-size: 7.0pt;">&#160;&#160;&#160;</span><span class="FM_Helvetica">&#160;</span>You can use a hierarchy that is 15 levels deep, but count all levels of IF, CASE, FOR, WHILE, and REPEAT constructs.</p>
<p class="FM_bul1">&#160;</p>

<table cellspacing="0" width="661" class="hcp8">
<tr style="height: 20.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="661">
<p class="FM_CRhead3">Sample Programming</p>
</td>
</tr>
</table>

<p class="FM_body1">This example assigns INT#10 to variable def if the value of variable <span class="hcp5">abc</span> is INT#1, INT#20 if the value of variable <span class="hcp5">abc</span> is INT#2, and INT#30 if the value of variable <span class="hcp5">abc</span> is INT#3. Otherwise, it assigns the value of variable <span class="hcp5">ghi</span> to variable <span class="hcp5">def</span>.</p>

<table cellspacing="0" width="227" class="hcp9">
<tr style="height: 15.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="76" class="hcp1">
<p class="FM_tabletitlec9pt">Variable</p>
</td>
<td bgcolor="#B3B3B3" width="76" class="hcp1">
<p class="FM_tabletitlec9pt">Data type</p>
</td>
<td bgcolor="#B3B3B3" width="76" class="hcp2">
<p class="FM_tabletitlec9pt">Initial value</p>
</td>
</tr>
<tr style="height: 15.00pt;">
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">abc</p>
</td>
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">INT</p>
</td>
<td width="76" class="hcp4">
<p class="FM_tablebody1c9pt">0</p>
</td>
</tr>
<tr style="height: 15.00pt;">
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">def</p>
</td>
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">INT</p>
</td>
<td width="76" class="hcp4">
<p class="FM_tablebody1c9pt">0</p>
</td>
</tr>
<tr style="height: 15.00pt;">
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">ghi</p>
</td>
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">INT</p>
</td>
<td width="76" class="hcp4">
<p class="FM_tablebody1c9pt">0</p>
</td>
</tr>
</table>
<br>
<div class="FM_body1l">CASE abc OF</div>
<div class="FM_body1l">&#160;INT#1:</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=INT#10;</div>
<div class="FM_body1l">&#160;INT#2:</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=INT#20;</div>
<div class="FM_body1l">&#160;INT#3:</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=INT#30;</div>
<div class="FM_body1l">&#160;ELSE</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=ghi;</div>
<div class="FM_body1l">END_CASE;</div>
<div class="FM_body1l">&#160;</div>
<p class="FM_body1">This example assigns INT#10 to variable <span class="hcp5">def</span> if the value of variable <span class="hcp5">abc</span> is INT#1, INT#20 if the value of variable <span class="hcp5">abc</span> is INT#2 or INT#5, and INT#30 if the value of variable <span class="hcp5">abc</span> is between INT#6 and INT#10, inclusive. Otherwise, it does nothing.</p>

<table cellspacing="0" width="227" class="hcp9">
<tr style="height: 15.00pt;" bgcolor="#B3B3B3">
<td bgcolor="#B3B3B3" width="76" class="hcp1">
<p class="FM_tabletitlec9pt">Variable</p>
</td>
<td bgcolor="#B3B3B3" width="76" class="hcp1">
<p class="FM_tabletitlec9pt">Data type</p>
</td>
<td bgcolor="#B3B3B3" width="76" class="hcp2">
<p class="FM_tabletitlec9pt">Initial value</p>
</td>
</tr>
<tr style="height: 15.00pt;">
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">abc</p>
</td>
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">INT</p>
</td>
<td width="76" class="hcp4">
<p class="FM_tablebody1c9pt">0</p>
</td>
</tr>
<tr style="height: 15.00pt;">
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">def</p>
</td>
<td width="76" class="hcp3">
<p class="FM_tablebody1c9pt">INT</p>
</td>
<td width="76" class="hcp4">
<p class="FM_tablebody1c9pt">0</p>
</td>
</tr>
</table>
<br>
<div class="FM_body1l">CASE abc OF</div>
<div class="FM_body1l">&#160;INT#1:</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=INT#10;</div>
<div class="FM_body1l">&#160;INT#2,INT#5:</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=INT#20;</div>
<div class="FM_body1l">&#160;INT#6..INT#10:</div>
<div class="FM_body1l">&#160;&#160;&#160;&#160;def:=INT#30;</div>
<div class="FM_body1l">END_CASE;</div>
<div class="FM_body1l">&#160;</div>
</body>
</html>
